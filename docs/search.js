window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = [{"fullname": "bandsos", "modulename": "bandsos", "type": "module", "doc": "<div class=\"pdoc-alert pdoc-alert-danger\">\n\n<p>This toolbox is still in its major version 0. The interface is expected to change during its development, caution is\nadviced.</p>\n\n</div>\n\n<p><code>bandsos</code> is a python package developed under the framework of BandSOS project. <code>bandsos</code> toolbox provides necessary \nand functions to deploy a coastal flood forecasting system. The toolbox is currently published under GPL v3 license.</p>\n\n<div class=\"pdoc-alert pdoc-alert-warning\">\n\n<p>Please direct your advice, contribution, bug reports to the <a href=\"https://github.com/jamal919/bandsos-platform\">github repository</a></p>\n\n</div>\n\n<div class=\"pdoc-alert pdoc-alert-note\">\n\n<h6 id=\"bandsos-project\">BandSOS Project</h6>\n\n<p>Experimented on the Bengal delta in Bangladesh, BanD-SOS project aims to establish a pre-operational service for forecasting \ncyclonic flooding and the associated societal risk. This service will have two components: a forecast of the coastal \nflooding hazard in real time that uses a state-of-the-art coupled hydrodynamic-wave modelling platform, and a coupling \nof this forecast with a mapping of the vulnerability of the exposed areas. The project is a collaboration with Bangladesh\nWater Development Board (BWDB) - the government engineering organization of Bangladesh which manages the water resource\ninfrastructure and tasked with providing the flood forecasting to the vast community of Bangladesh.</p>\n\n</div>\n\n<h1 id=\"installation\">Installation</h1>\n\n<p>The bandsos toolbox is written in python3, and tested in python v3.6+. The source-code is freely available under GPL-3\nlicense at our <a href=\"https://github.com/jamal919/bandsos-platform\">github repository</a>. The source-code can be obtained through\n<code>git</code> using <code>git clone https://github.com/jamal919/bandsos-platform</code>, or directly downloading from the repository.</p>\n\n<p>The toolbox is published at python package repository (pypi/pip) at <a href=\"https://pypi.org/project/bandsos/\">https://pypi.org/project/bandsos/</a>, and typically can\nbe installed through <code>pip install bandsos</code>. However, some modules depends on some external open-source tools, that might\nbe complicated to install in some system, and all the functionalities (mainly tile generation) might not work. A fully \nfunctioning version of the toolbox can be installed and used in several ways - </p>\n\n<ul>\n<li><a href=\"#system-wide-installation\">system-wide installation</a></li>\n<li><a href=\"#condaanaconda-installation\">Conda/Anaconda installation</a></li>\n<li><a href=\"#stand-alone-installation\">docker container</a></li>\n</ul>\n\n<h2 id=\"system-wide-installation\">System-wide installation</h2>\n\n<p>bandsos toolbox relies on a moderate number of external packages and opensource softwares. Particularly, the toolbox \nrelies on gdal - a command-line based geographical data processing toolbox - for postprocessing the model outputs to \nwebtiles. The rest of the python packages are installable from the pip. Gdal is often \navailable through the software distribution system of linux, but on windows it is particularly difficult to get it\nworking with the rest of the system and python. For this reason - <em>we strongly advice to use conda installation system</em>. </p>\n\n<p>To install the toolbox system-wide in linux, install <code>python</code>, <code>numpy</code>, <code>scipy</code>, <code>gdal-python</code>, <code>gdal</code>, <code>proj</code>, <code>xarray</code>, \n<code>netcdf4</code>, <code>f90nml</code>, <code>utide</code>, <code>rioxarray</code>, <code>beautifulsoup4</code>. Install as many packages from the system repository as \npossible, then the rest can be installed through pip using <code>pip install &lt;packagename&gt;</code> (where <packagename> is to be \nreplaced with your needed package name).</p>\n\n<p>The system-wide installation is tested while developing the <a href=\"#docker-container\">docker container</a>. Please consult the\n<code>Dockerfile</code> to see which packages were installed in a Ubuntu 22.04 LTS system.</p>\n\n<h2 id=\"condaanaconda-installation\">Conda/Anaconda installation</h2>\n\n<p>Conda is a python environment management system, which can install not only python-only programs (e.g., environments created\nwith venv) but also supplementary/required binary programs.</p>\n\n<p>A brief installation procedure can be found here - <a href=\"https://docs.anaconda.com/anaconda/install/index.html\">https://docs.anaconda.com/anaconda/install/index.html</a>.</p>\n\n<h2 id=\"docker-container\">Docker container</h2>\n\n<p>Docker is a containerization technique to isolate the necessary dependency-components for running a software into an isolated\nenvironment. Docker has the added benefit the ability to run in windows, linux, mac, or other ported platforms typically\nwithout any change in the containarized system. It also allows easy deployment into cloud computing systems, or large\ncomputing clusters very quickly.</p>\n\n<p>Installation of the system using docker goes in two step - </p>\n\n<ol>\n<li>Installation of the docker software itself.</li>\n<li>Installation of the bandsos platform, using <code>docker pull</code> command</li>\n</ol>\n\n<p>First lets install docker software itself in your platform of choice - <a href=\"#windows\">Windows</a>, </p>\n\n<h3 id=\"windows\">Windows</h3>\n\n<ul>\n<li>Activate container hypervisor feature in BIOS for best performance.</li>\n<li>Activate <code>Subsystem for Linux</code> in Windows feature.</li>\n<li>Install <code>docker desktop</code> using the executable from <a href=\"https://docs.docker.com/engine/install/\">https://docs.docker.com/engine/install/</a></li>\n<li>Note: You might need to update the <code>linux-kernel-package</code>, update if promted.</li>\n</ul>\n\n<h3 id=\"linux\">Linux</h3>\n\n<ul>\n<li>Install docker normally from <a href=\"https://docs.docker.com/engine/install/\">https://docs.docker.com/engine/install/</a></li>\n<li>Activate <code>sudo systemctl start docker</code></li>\n<li>Enable for load on startup <code>sudo systemctl enable docker</code></li>\n<li>Add <code>docker</code> group: <code>sudo groupadd docker</code></li>\n<li>Add the current user to the <code>docker</code> group : <code>sudo usermod -aG docker $USER</code></li>\n</ul>\n\n<h2 id=\"run-folder-structure\">Run folder structure</h2>\n\n<pre><code>- ROOTDIR\n    |- config\n    |- fluxes\n        |- gfs\n        |- hwrf\n        |- jtwc\n        |- discharge\n    |- forecasts\n    |- scripts\n</code></pre>\n\n<h2 id=\"how-to-run\">How to run</h2>\n\n<ul>\n<li>bandsos.py</li>\n<li>bandsos.env</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>docker run --rm --env-file<span class=\"o\">=</span>bandsos.env -v <span class=\"sb\">`</span><span class=\"nb\">pwd</span><span class=\"sb\">`</span>/config:/bandsos/config -v <span class=\"sb\">`</span><span class=\"nb\">pwd</span><span class=\"sb\">`</span>/fluxes:/bandsos/fluxes\n</code></pre>\n</div>\n\n<h1 id=\"schism-model\">SCHISM Model</h1>\n\n<h2 id=\"mesh-generation\">Mesh generation</h2>\n\n<h2 id=\"inputs\">Inputs</h2>\n\n<h2 id=\"modules\">Modules</h2>\n\n<h2 id=\"examples\">Examples</h2>\n\n<h3 id=\"2d-model-with-tide\">2D model with tide</h3>\n\n<h3 id=\"2d-model-with-atmosphere\">2D model with atmosphere</h3>\n\n<h3 id=\"2d-model-with-coupled-wwm\">2D model with coupled WWM</h3>\n\n<h1 id=\"running-bandsos-system\">Running BandSOS system</h1>\n\n<p>Scripting the BandSOS system is quite easy, thanks to the python programming language. The script is run in a system or \ndocker environment where <code>bandsos</code> library is installed. Please see the <code>examples</code> folder in the repository for some\ndemonstration how the scripts can be developed. </p>\n\n<div class=\"pdoc-alert pdoc-alert-note\">\n\n<p>In the alpha version, the full workflow is needed to be integrated into the running script. In future development\nof the interface, more concise version is planned to be developed.</p>\n\n</div>\n\n<h2 id=\"hindcast\">Hindcast</h2>\n\n<pre><code>{\n    'cycle':'yyyymmddhh',\n    'producer':'producer',\n    'status':'ongoing' &lt;ongoing, failed, done, published&gt;,\n    'lastupdate':'2020-05-17 00:00:00'\n    'lastforecast':{\n                'date':'2020-05-17',\n                'cycle':'00'\n            }\n}\n</code></pre>\n\n<h2 id=\"forecast\">Forecast</h2>\n\n<h1 id=\"publishing-online\">Publishing Online</h1>\n\n<h2 id=\"githubgithub-pages\">Github/Github pages</h2>\n\n<ul>\n<li>Creating an account</li>\n<li>Cloning the website</li>\n<li>Setup github pages</li>\n</ul>\n\n<h2 id=\"folder-structure\">Folder structure</h2>\n\n<pre><code>|- fluxes\n    |- netcdf\n        |- gfs.nc\n    |- tracks\n        |- bioxxxxxx.dat\n        |- aioxxxxxx.dat\n|- advisories\n    |- jtwc\n|- forecasts\n    |- elev\n        |- tiles\n            |- 2022010100\n            |- 2022010103\n            |- ...\n            |- etc.\n        |- stations\n            |- WL001.csv\n            |- WL002.csv\n            |- etc.\n    |- maxelev\n        |- tiles\n            |- 20220101\n            |- 20220102\n            |- 20220103\n            |- ...\n            |- etc.\n    |- risk\n        |- tiles\n            |- 20220101\n            |- 20220102\n            |- 20220103\n            |- ...\n            |- etc.\n    |- track\n        |- forecast.json\n        |- best.json\n        |- model.json\n</code></pre>\n\n<h2 id=\"manifestjson\">manifest.json</h2>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"p\">[</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;cycle&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;2022020100&quot;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;date&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;yyyy-mm-dd HH:MM:SS&quot;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;lastupdate&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;yyyy-mm-dd HH:MM:SS&quot;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;producer&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;FFWC/BWDB&quot;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;version&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;0.1&quot;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;advisories&quot;</span><span class=\"p\">:[</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;name&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;JTWC&quot;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;agency&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;JTWC&quot;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;source&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;https://www.metoc.navy.mil/jtwc/jtwc.html&quot;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;src&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;advisories/jtwc.dat&quot;</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;fluxes&quot;</span><span class=\"p\">:[</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;name&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;GFS 0.25 deg&quot;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;type&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;netcdf&quot;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;available&quot;</span><span class=\"p\">:</span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;source&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;NOAA/NCEP&quot;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;src&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;fluxes/netcdf/gfs.nc&quot;</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;name&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;NOAA/NCEP&quot;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;type&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;atcf&quot;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;available&quot;</span><span class=\"p\">:</span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;source&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;NOAA/NCEP&quot;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;src&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;fluxes/tracks/aio_yyyymmddhh.dat&quot;</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;name&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;JTWC/BEST Track&quot;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;type&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;atcf&quot;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;available&quot;</span><span class=\"p\">:</span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;source&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;NOAA/NCEP&quot;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;src&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;fluxes/tracks/bio_yyyymmddhh.dat&quot;</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;name&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;HWRF&quot;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;type&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;atcf&quot;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;available&quot;</span><span class=\"p\">:</span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;source&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;NOAA/NCEP&quot;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;src&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;fluxes/tracks/hwrf_yyyymmddhh.dat&quot;</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;forecasts&quot;</span><span class=\"p\">:[</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;name&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;Water level&quot;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;src&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;forecasts/elev&quot;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;layers&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                    </span><span class=\"nt\">&quot;name&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;Map&quot;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">                    </span><span class=\"nt\">&quot;type&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;tiles&quot;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">                    </span><span class=\"nt\">&quot;timeseries&quot;</span><span class=\"p\">:</span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">                    </span><span class=\"nt\">&quot;colorbar&quot;</span><span class=\"p\">:</span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">                    </span><span class=\"nt\">&quot;colorbar_file&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;colorbar.png&quot;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">                    </span><span class=\"nt\">&quot;colorscale&quot;</span><span class=\"p\">:[{</span><span class=\"nt\">&quot;value&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;color&quot;</span><span class=\"p\">}],</span><span class=\"w\"></span>\n<span class=\"w\">                    </span><span class=\"nt\">&quot;timestamps&quot;</span><span class=\"p\">:[</span><span class=\"w\"></span>\n<span class=\"w\">                        </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                            </span><span class=\"nt\">&quot;time&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;2020-05-15 03:00:00&quot;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">                            </span><span class=\"nt\">&quot;folder&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;2020051503&quot;</span><span class=\"w\"></span>\n<span class=\"w\">                        </span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">                        </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                            </span><span class=\"s2\">&quot;etc&quot;</span><span class=\"w\"></span>\n<span class=\"w\">                        </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">                    </span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                    </span><span class=\"nt\">&quot;name&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;Water level&quot;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">                    </span><span class=\"nt\">&quot;type&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;stations&quot;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">                    </span><span class=\"nt\">&quot;stations&quot;</span><span class=\"p\">:[</span><span class=\"w\"></span>\n<span class=\"w\">                        </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                            </span><span class=\"nt\">&quot;id&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;WL062&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span>\n<span class=\"w\">                            </span><span class=\"nt\">&quot;lon&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mf\">89.8044</span><span class=\"p\">,</span><span class=\"w\"> </span>\n<span class=\"w\">                            </span><span class=\"nt\">&quot;lat&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mf\">22.6486</span><span class=\"p\">,</span><span class=\"w\"> </span>\n<span class=\"w\">                            </span><span class=\"nt\">&quot;name&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;Bagerhat&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span>\n<span class=\"w\">                            </span><span class=\"nt\">&quot;org&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;BWDB&quot;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">                            </span><span class=\"nt\">&quot;status&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;unknown&quot;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">                        </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">                    </span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">],</span><span class=\"w\"></span>\n\n<span class=\"w\">        </span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;name&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;Water level (maximum)&quot;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;src&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;forecasts/maxelev&quot;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;layers&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                    </span><span class=\"nt\">&quot;name&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;Map&quot;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">                    </span><span class=\"nt\">&quot;type&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;tiles&quot;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">                    </span><span class=\"nt\">&quot;timeseries&quot;</span><span class=\"p\">:</span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">                    </span><span class=\"nt\">&quot;colorbar&quot;</span><span class=\"p\">:</span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">                    </span><span class=\"nt\">&quot;colorscale&quot;</span><span class=\"p\">:{</span><span class=\"w\"></span>\n<span class=\"w\">                        </span><span class=\"p\">[</span><span class=\"w\"></span>\n<span class=\"w\">                            </span><span class=\"nt\">&quot;value&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;color&quot;</span><span class=\"w\"></span>\n<span class=\"w\">                        </span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"w\">                    </span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">                    </span><span class=\"nt\">&quot;timestamps&quot;</span><span class=\"p\">:[</span><span class=\"w\"></span>\n<span class=\"w\">                        </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                            </span><span class=\"nt\">&quot;time&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;2020-05-15&quot;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">                            </span><span class=\"nt\">&quot;folder&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;20200515&quot;</span><span class=\"w\"></span>\n<span class=\"w\">                        </span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">                        </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                            </span><span class=\"s2\">&quot;etc&quot;</span><span class=\"w\"></span>\n<span class=\"w\">                        </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">                    </span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;name&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;Risk&quot;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;src&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;forecasts/risk&quot;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;layers&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                    </span><span class=\"nt\">&quot;type&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;tiles&quot;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">                    </span><span class=\"nt\">&quot;timeseries&quot;</span><span class=\"p\">:</span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">                    </span><span class=\"nt\">&quot;colorbar&quot;</span><span class=\"p\">:</span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">                    </span><span class=\"nt\">&quot;colorscale&quot;</span><span class=\"p\">:{</span><span class=\"w\"></span>\n<span class=\"w\">                        </span><span class=\"p\">[</span><span class=\"w\"></span>\n<span class=\"w\">                            </span><span class=\"nt\">&quot;value&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;color&quot;</span><span class=\"w\"></span>\n<span class=\"w\">                        </span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"w\">                    </span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">                    </span><span class=\"nt\">&quot;timestamps&quot;</span><span class=\"p\">:[</span><span class=\"w\"></span>\n<span class=\"w\">                        </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                            </span><span class=\"nt\">&quot;time&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;2020-05-15&quot;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">                            </span><span class=\"nt\">&quot;folder&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;20200515&quot;</span><span class=\"w\"></span>\n<span class=\"w\">                        </span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">                        </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                            </span><span class=\"s2\">&quot;etc&quot;</span><span class=\"w\"></span>\n<span class=\"w\">                        </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">                    </span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;tracks&quot;</span><span class=\"p\">:[</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">{</span><span class=\"w\"></span>\n\n<span class=\"w\">        </span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">{</span><span class=\"w\"></span>\n\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"p\">]</span><span class=\"w\"></span>\n</code></pre>\n</div>\n\n<h1 id=\"references\">References</h1>\n\n<h1 id=\"example-scripts\">Example scripts</h1>\n\n<h2 id=\"full-forecast-script\">Full forecast script</h2>\n\n<p>Below is an example of a full forecast script - source code available in github repository. See <a href=\"#how-to-run\">How to run</a> \nsection to see how you can run the following scripts.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"ch\">#!/usr/bin/env python</span>\n<span class=\"sd\">&#39;&#39;&#39;</span>\n<span class=\"sd\">A forecasting script using bandsos platform for Bengal delta region. The script illustrates various functionalities</span>\n<span class=\"sd\">available in the bandsos toolbox. This program is particularly developed to be deployed using the jamal919/bandsos </span>\n<span class=\"sd\">docker environment. You will need the environment variables listed in run.env file.</span>\n<span class=\"sd\">&#39;&#39;&#39;</span>\n<span class=\"n\">__version__</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;0.1&#39;</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">bandsos.schism</span> <span class=\"kn\">import</span> <span class=\"n\">Grid</span><span class=\"p\">,</span> <span class=\"n\">Sflux</span><span class=\"p\">,</span> <span class=\"n\">Bctides</span><span class=\"p\">,</span> <span class=\"n\">Tidefacout</span>\n<span class=\"kn\">from</span> <span class=\"nn\">bandsos.webdata</span> <span class=\"kn\">import</span> <span class=\"n\">GFS_0p25_1hr</span>\n<span class=\"kn\">from</span> <span class=\"nn\">bandsos.webdir</span> <span class=\"kn\">import</span> <span class=\"n\">GithubDirectory</span>\n<span class=\"kn\">from</span> <span class=\"nn\">bandsos.gfs</span> <span class=\"kn\">import</span> <span class=\"n\">create_gfs_data</span>\n<span class=\"kn\">from</span> <span class=\"nn\">bandsos.color</span> <span class=\"kn\">import</span> <span class=\"n\">Colormap</span>\n<span class=\"kn\">from</span> <span class=\"nn\">bandsos.post</span> <span class=\"kn\">import</span> <span class=\"n\">create_water_level_tiles</span><span class=\"p\">,</span> <span class=\"n\">create_water_level_stations</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">xarray</span> <span class=\"k\">as</span> <span class=\"nn\">xr</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"nn\">pd</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib.colors</span> <span class=\"k\">as</span> <span class=\"nn\">mcolors</span>\n<span class=\"kn\">from</span> <span class=\"nn\">mpl_toolkits.axes_grid1</span> <span class=\"kn\">import</span> <span class=\"n\">make_axes_locatable</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">cmocean.cm</span> <span class=\"k\">as</span> <span class=\"nn\">ccm</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">shutil</span>\n<span class=\"kn\">import</span> <span class=\"nn\">f90nml</span>\n<span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">subprocess</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n<span class=\"kn\">import</span> <span class=\"nn\">json</span>\n\n<span class=\"n\">SECONDS2DAY</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"o\">/</span><span class=\"mi\">86400</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">init_cycle</span><span class=\"p\">(</span><span class=\"n\">cycle</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">model_spinup</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">forecast_length</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">cycle_step</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">cycle_format</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;%Y%m</span><span class=\"si\">%d</span><span class=\"s1\">%H&#39;</span><span class=\"p\">):</span>\n    <span class=\"sd\">&#39;&#39;&#39;</span>\n<span class=\"sd\">    Extracts and return a dict of `start_date`, `end_date`, `forecast_length`, `cycle_step` for a given cycle name.</span>\n<span class=\"sd\">    &#39;&#39;&#39;</span>\n    <span class=\"n\">cycle_date</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">to_datetime</span><span class=\"p\">(</span><span class=\"n\">cycle</span><span class=\"p\">,</span> <span class=\"nb\">format</span><span class=\"o\">=</span><span class=\"n\">cycle_format</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span><span class=\"p\">(</span>\n        <span class=\"p\">{</span>\n            <span class=\"s1\">&#39;cycle&#39;</span><span class=\"p\">:</span><span class=\"n\">cycle</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;cycle_date&#39;</span><span class=\"p\">:</span><span class=\"n\">cycle_date</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;start_date&#39;</span><span class=\"p\">:</span> <span class=\"n\">cycle_date</span> <span class=\"o\">-</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">Timedelta</span><span class=\"p\">(</span><span class=\"n\">model_spinup</span><span class=\"p\">),</span>\n            <span class=\"s1\">&#39;end_date&#39;</span><span class=\"p\">:</span> <span class=\"n\">cycle_date</span> <span class=\"o\">+</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">Timedelta</span><span class=\"p\">(</span><span class=\"n\">forecast_length</span><span class=\"p\">),</span>\n            <span class=\"s1\">&#39;forecast_length&#39;</span><span class=\"p\">:</span> <span class=\"n\">forecast_length</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;cycle_step&#39;</span><span class=\"p\">:</span> <span class=\"n\">cycle_step</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">create_gfs_sflux</span><span class=\"p\">(</span><span class=\"n\">fname</span><span class=\"p\">,</span> <span class=\"n\">n_buffer_steps</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">outpath</span><span class=\"o\">=</span><span class=\"s1\">&#39;./&#39;</span><span class=\"p\">,</span> <span class=\"n\">step</span><span class=\"o\">=</span><span class=\"s1\">&#39;1H&#39;</span><span class=\"p\">,</span> <span class=\"n\">nstep</span><span class=\"o\">=</span><span class=\"mi\">24</span><span class=\"p\">,</span> <span class=\"n\">basedate</span><span class=\"o\">=</span><span class=\"s1\">&#39;1970-01-01&#39;</span><span class=\"p\">):</span>\n    <span class=\"n\">ds</span> <span class=\"o\">=</span> <span class=\"n\">xr</span><span class=\"o\">.</span><span class=\"n\">open_dataset</span><span class=\"p\">(</span><span class=\"n\">fname</span><span class=\"p\">)</span>\n    <span class=\"n\">step</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">to_timedelta</span><span class=\"p\">(</span><span class=\"n\">step</span><span class=\"p\">)</span>\n    <span class=\"n\">basedate</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">to_datetime</span><span class=\"p\">(</span><span class=\"n\">basedate</span><span class=\"p\">)</span>\n    <span class=\"n\">start_time</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">to_datetime</span><span class=\"p\">(</span><span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n    <span class=\"n\">end_time</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">to_datetime</span><span class=\"p\">(</span><span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">)[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n    <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">ds</span><span class=\"p\">[</span><span class=\"s1\">&#39;lon&#39;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">values</span>\n    <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">ds</span><span class=\"p\">[</span><span class=\"s1\">&#39;lat&#39;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">values</span>\n\n    <span class=\"n\">sflux</span> <span class=\"o\">=</span> <span class=\"n\">Sflux</span><span class=\"p\">(</span>\n        <span class=\"n\">grid</span><span class=\"o\">=</span><span class=\"n\">Grid</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"n\">y</span><span class=\"p\">),</span> \n        <span class=\"n\">basedate</span><span class=\"o\">=</span><span class=\"n\">basedate</span><span class=\"p\">,</span> \n        <span class=\"n\">sflux_type</span><span class=\"o\">=</span><span class=\"s1\">&#39;air&#39;</span><span class=\"p\">,</span> \n        <span class=\"n\">nstep</span><span class=\"o\">=</span><span class=\"n\">nstep</span><span class=\"p\">,</span> \n        <span class=\"n\">path</span><span class=\"o\">=</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">outpath</span><span class=\"p\">,</span> <span class=\"s1\">&#39;sflux&#39;</span><span class=\"p\">)</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"n\">timesteps</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">date_range</span><span class=\"p\">(</span><span class=\"n\">start</span><span class=\"o\">=</span><span class=\"n\">start_time</span><span class=\"p\">,</span> <span class=\"n\">end</span><span class=\"o\">=</span><span class=\"n\">end_time</span><span class=\"p\">,</span> <span class=\"n\">freq</span><span class=\"o\">=</span><span class=\"n\">step</span><span class=\"p\">)</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">timestep</span> <span class=\"ow\">in</span> <span class=\"n\">timesteps</span><span class=\"p\">:</span>\n\n        <span class=\"n\">flux</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n                <span class=\"s1\">&#39;uwind&#39;</span><span class=\"p\">:</span><span class=\"n\">ds</span><span class=\"p\">[</span><span class=\"s1\">&#39;u10&#39;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">interp</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"o\">=</span><span class=\"n\">timestep</span><span class=\"p\">,</span> <span class=\"n\">lon</span><span class=\"o\">=</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">lat</span><span class=\"o\">=</span><span class=\"n\">y</span><span class=\"p\">),</span>\n                <span class=\"s1\">&#39;vwind&#39;</span><span class=\"p\">:</span><span class=\"n\">ds</span><span class=\"p\">[</span><span class=\"s1\">&#39;v10&#39;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">interp</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"o\">=</span><span class=\"n\">timestep</span><span class=\"p\">,</span> <span class=\"n\">lon</span><span class=\"o\">=</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">lat</span><span class=\"o\">=</span><span class=\"n\">y</span><span class=\"p\">),</span>\n                <span class=\"s1\">&#39;prmsl&#39;</span><span class=\"p\">:</span><span class=\"n\">ds</span><span class=\"p\">[</span><span class=\"s1\">&#39;prmsl&#39;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">interp</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"o\">=</span><span class=\"n\">timestep</span><span class=\"p\">,</span> <span class=\"n\">lon</span><span class=\"o\">=</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">lat</span><span class=\"o\">=</span><span class=\"n\">y</span><span class=\"p\">),</span>\n                <span class=\"s1\">&#39;stmp&#39;</span><span class=\"p\">:</span><span class=\"n\">ds</span><span class=\"p\">[</span><span class=\"s1\">&#39;stmp&#39;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">interp</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"o\">=</span><span class=\"n\">timestep</span><span class=\"p\">,</span> <span class=\"n\">lon</span><span class=\"o\">=</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">lat</span><span class=\"o\">=</span><span class=\"n\">y</span><span class=\"p\">),</span>\n                <span class=\"s1\">&#39;spfh&#39;</span><span class=\"p\">:</span><span class=\"n\">ds</span><span class=\"p\">[</span><span class=\"s1\">&#39;spfh&#39;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">interp</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"o\">=</span><span class=\"n\">timestep</span><span class=\"p\">,</span> <span class=\"n\">lon</span><span class=\"o\">=</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">lat</span><span class=\"o\">=</span><span class=\"n\">y</span><span class=\"p\">)</span>\n            <span class=\"p\">}</span>\n\n        <span class=\"n\">sflux</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span>\n            <span class=\"n\">at</span><span class=\"o\">=</span><span class=\"n\">timestep</span><span class=\"p\">,</span>\n            <span class=\"n\">flux</span><span class=\"o\">=</span><span class=\"n\">flux</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># Buffer steps</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n_buffer_steps</span><span class=\"p\">):</span>\n        <span class=\"n\">sflux</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span>\n            <span class=\"n\">at</span><span class=\"o\">=</span><span class=\"n\">timestep</span><span class=\"o\">+</span><span class=\"n\">step</span><span class=\"o\">*</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">),</span>\n            <span class=\"n\">flux</span><span class=\"o\">=</span><span class=\"n\">flux</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"n\">sflux</span><span class=\"o\">.</span><span class=\"n\">finish</span><span class=\"p\">()</span>\n    <span class=\"n\">sflux</span><span class=\"o\">.</span><span class=\"n\">sfluxtxt</span><span class=\"p\">(</span><span class=\"n\">dt</span><span class=\"o\">=</span><span class=\"n\">step</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">create_tidefacinput</span><span class=\"p\">(</span><span class=\"n\">start_date</span><span class=\"p\">,</span> <span class=\"n\">end_date</span><span class=\"p\">,</span> <span class=\"n\">savedir</span><span class=\"o\">=</span><span class=\"s1\">&#39;./&#39;</span><span class=\"p\">):</span>\n    <span class=\"n\">model_start</span> <span class=\"o\">=</span> <span class=\"n\">start_date</span>\n    <span class=\"n\">model_end</span> <span class=\"o\">=</span> <span class=\"n\">end_date</span>\n    <span class=\"n\">rnday</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">model_end</span> <span class=\"o\">-</span> <span class=\"n\">model_start</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">total_seconds</span><span class=\"p\">()</span><span class=\"o\">*</span><span class=\"n\">SECONDS2DAY</span>\n    <span class=\"n\">start_year</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">model_start</span><span class=\"o\">.</span><span class=\"n\">strftime</span><span class=\"p\">(</span><span class=\"s1\">&#39;%Y&#39;</span><span class=\"p\">))</span>\n    <span class=\"n\">start_month</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">model_start</span><span class=\"o\">.</span><span class=\"n\">strftime</span><span class=\"p\">(</span><span class=\"s1\">&#39;%m&#39;</span><span class=\"p\">))</span>\n    <span class=\"n\">start_day</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">model_start</span><span class=\"o\">.</span><span class=\"n\">strftime</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"si\">%d</span><span class=\"s1\">&#39;</span><span class=\"p\">))</span>\n    <span class=\"n\">start_hour</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">model_start</span><span class=\"o\">.</span><span class=\"n\">strftime</span><span class=\"p\">(</span><span class=\"s1\">&#39;%H&#39;</span><span class=\"p\">))</span>\n\n    <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">savedir</span><span class=\"p\">,</span> <span class=\"s1\">&#39;tidefacinput&#39;</span><span class=\"p\">),</span> <span class=\"s1\">&#39;w&#39;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n        <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">&#39;</span><span class=\"si\">{</span><span class=\"n\">start_year</span><span class=\"si\">}</span><span class=\"s1\">,</span><span class=\"si\">{</span><span class=\"n\">start_month</span><span class=\"si\">}</span><span class=\"s1\">,</span><span class=\"si\">{</span><span class=\"n\">start_day</span><span class=\"si\">}</span><span class=\"s1\">,</span><span class=\"si\">{</span><span class=\"n\">start_hour</span><span class=\"si\">}</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n        <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">&#39;</span><span class=\"si\">{</span><span class=\"n\">rnday</span><span class=\"si\">}</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">update_bctides</span><span class=\"p\">(</span><span class=\"n\">tidefac</span><span class=\"p\">,</span> <span class=\"n\">bctides_template</span><span class=\"p\">,</span> <span class=\"n\">bctides_outfile</span><span class=\"o\">=</span><span class=\"s1\">&#39;bctides.in&#39;</span><span class=\"p\">,</span> <span class=\"n\">tidefac_out</span><span class=\"o\">=</span><span class=\"s1\">&#39;tide_fac.out&#39;</span><span class=\"p\">,</span> <span class=\"n\">cycledir</span><span class=\"o\">=</span><span class=\"s1\">&#39;./&#39;</span><span class=\"p\">):</span>\n    <span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">call</span><span class=\"p\">([</span><span class=\"n\">tidefac</span><span class=\"p\">],</span> <span class=\"n\">cwd</span><span class=\"o\">=</span><span class=\"n\">cycledir</span><span class=\"p\">)</span>\n    <span class=\"n\">bctides</span> <span class=\"o\">=</span> <span class=\"n\">Bctides</span><span class=\"p\">()</span>\n    <span class=\"n\">bctides</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">(</span><span class=\"n\">bctides_template</span><span class=\"p\">)</span>\n    <span class=\"n\">tidefac</span> <span class=\"o\">=</span> <span class=\"n\">Tidefacout</span><span class=\"p\">()</span>\n    <span class=\"n\">tidefac</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">cycledir</span><span class=\"p\">,</span> <span class=\"n\">tidefac_out</span><span class=\"p\">))</span>\n    <span class=\"n\">bctides</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">tidefac</span><span class=\"o\">=</span><span class=\"n\">tidefac</span><span class=\"p\">)</span>\n    <span class=\"n\">bctides</span><span class=\"o\">.</span><span class=\"n\">updatesa</span><span class=\"p\">(</span><span class=\"n\">tidefac</span><span class=\"o\">=</span><span class=\"n\">tidefac</span><span class=\"p\">)</span>\n    <span class=\"n\">bctides</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">cycledir</span><span class=\"p\">,</span> <span class=\"n\">bctides_outfile</span><span class=\"p\">))</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">create_climatic_discharge</span><span class=\"p\">(</span><span class=\"n\">discharge</span><span class=\"p\">,</span> <span class=\"n\">tidefacinput</span><span class=\"p\">,</span> <span class=\"n\">bnds</span><span class=\"p\">,</span> <span class=\"n\">outdir</span><span class=\"o\">=</span><span class=\"s1\">&#39;./&#39;</span><span class=\"p\">):</span>\n    <span class=\"n\">ds</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">read_csv</span><span class=\"p\">(</span><span class=\"n\">discharge</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">set_index</span><span class=\"p\">(</span><span class=\"s1\">&#39;Day&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">tidefacinput</span><span class=\"p\">,</span> <span class=\"s1\">&#39;r&#39;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n        <span class=\"n\">tm</span> <span class=\"o\">=</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">readlines</span><span class=\"p\">()</span>\n        <span class=\"n\">start_year</span><span class=\"p\">,</span> <span class=\"n\">start_month</span><span class=\"p\">,</span> <span class=\"n\">start_day</span><span class=\"p\">,</span> <span class=\"n\">start_hour</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">fromstring</span><span class=\"p\">(</span><span class=\"n\">tm</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">count</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">sep</span><span class=\"o\">=</span><span class=\"s1\">&#39;,&#39;</span><span class=\"p\">)</span>\n        <span class=\"n\">rnday</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">fromstring</span><span class=\"p\">(</span><span class=\"n\">tm</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">count</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">sep</span><span class=\"o\">=</span><span class=\"s1\">&#39;,&#39;</span><span class=\"p\">)</span>\n        <span class=\"n\">rnday</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ceil</span><span class=\"p\">(</span><span class=\"n\">rnday</span><span class=\"p\">))</span>\n        <span class=\"n\">fxday</span> <span class=\"o\">=</span> <span class=\"n\">rnday</span> <span class=\"o\">+</span> <span class=\"mi\">1</span>\n\n    <span class=\"n\">starttime</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">to_datetime</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">&#39;</span><span class=\"si\">{</span><span class=\"n\">start_year</span><span class=\"si\">}</span><span class=\"s1\">-</span><span class=\"si\">{</span><span class=\"n\">start_month</span><span class=\"si\">:</span><span class=\"s1\">02d</span><span class=\"si\">}</span><span class=\"s1\">-</span><span class=\"si\">{</span><span class=\"n\">start_day</span><span class=\"si\">:</span><span class=\"s1\">02d</span><span class=\"si\">}</span><span class=\"s1\"> </span><span class=\"si\">{</span><span class=\"n\">start_hour</span><span class=\"si\">:</span><span class=\"s1\">02d</span><span class=\"si\">}</span><span class=\"s1\">:00:00&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">days</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">date_range</span><span class=\"p\">(</span><span class=\"n\">start</span><span class=\"o\">=</span><span class=\"n\">starttime</span><span class=\"p\">,</span> <span class=\"n\">periods</span><span class=\"o\">=</span><span class=\"n\">fxday</span><span class=\"p\">,</span> <span class=\"n\">freq</span><span class=\"o\">=</span><span class=\"s1\">&#39;1D&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"n\">flux</span> <span class=\"o\">=</span> <span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">loc</span><span class=\"p\">[</span><span class=\"n\">days</span><span class=\"o\">.</span><span class=\"n\">dayofyear</span><span class=\"p\">,</span> <span class=\"n\">bnds</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"o\">-</span><span class=\"mi\">1</span> <span class=\"c1\"># - is inflow</span>\n    <span class=\"n\">flux</span> <span class=\"o\">=</span> <span class=\"n\">flux</span><span class=\"o\">.</span><span class=\"n\">set_index</span><span class=\"p\">((</span><span class=\"n\">days</span><span class=\"o\">-</span><span class=\"n\">days</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">total_seconds</span><span class=\"p\">())</span>\n    <span class=\"n\">flux</span><span class=\"o\">.</span><span class=\"n\">to_csv</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">outdir</span><span class=\"p\">,</span> <span class=\"s1\">&#39;flux.th&#39;</span><span class=\"p\">),</span> <span class=\"n\">sep</span><span class=\"o\">=</span><span class=\"s1\">&#39;</span><span class=\"se\">\\t</span><span class=\"s1\">&#39;</span><span class=\"p\">,</span> <span class=\"n\">float_format</span><span class=\"o\">=</span><span class=\"s1\">&#39;</span><span class=\"si\">%.1f</span><span class=\"s1\">&#39;</span><span class=\"p\">,</span> <span class=\"n\">header</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">index</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">create_param</span><span class=\"p\">(</span><span class=\"n\">tidefacinput</span><span class=\"p\">,</span> <span class=\"n\">param_template_file</span><span class=\"p\">,</span> <span class=\"n\">param_output_file</span><span class=\"p\">,</span> <span class=\"n\">wave</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n    <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">tidefacinput</span><span class=\"p\">,</span> <span class=\"s1\">&#39;r&#39;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n        <span class=\"n\">tm</span> <span class=\"o\">=</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">readlines</span><span class=\"p\">()</span>\n        <span class=\"n\">start_year</span><span class=\"p\">,</span> <span class=\"n\">start_month</span><span class=\"p\">,</span> <span class=\"n\">start_day</span><span class=\"p\">,</span> <span class=\"n\">start_hour</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">fromstring</span><span class=\"p\">(</span><span class=\"n\">tm</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">count</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">sep</span><span class=\"o\">=</span><span class=\"s1\">&#39;,&#39;</span><span class=\"p\">)</span>\n        <span class=\"n\">rnday</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">fromstring</span><span class=\"p\">(</span><span class=\"n\">tm</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">count</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">sep</span><span class=\"o\">=</span><span class=\"s1\">&#39;,&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"n\">patch_nml</span> <span class=\"o\">=</span> <span class=\"n\">f90nml</span><span class=\"o\">.</span><span class=\"n\">Namelist</span><span class=\"p\">({</span>\n        <span class=\"s1\">&#39;CORE&#39;</span><span class=\"p\">:{</span>\n            <span class=\"s1\">&#39;rnday&#39;</span><span class=\"p\">:</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">rnday</span><span class=\"p\">)</span>\n        <span class=\"p\">},</span>\n        <span class=\"s1\">&#39;OPT&#39;</span><span class=\"p\">:{</span>\n            <span class=\"s1\">&#39;start_year&#39;</span><span class=\"p\">:</span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">start_year</span><span class=\"p\">),</span>\n            <span class=\"s1\">&#39;start_month&#39;</span><span class=\"p\">:</span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">start_month</span><span class=\"p\">),</span>\n            <span class=\"s1\">&#39;start_day&#39;</span><span class=\"p\">:</span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">start_day</span><span class=\"p\">),</span>\n            <span class=\"s1\">&#39;start_hour&#39;</span><span class=\"p\">:</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">start_hour</span><span class=\"p\">)</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">})</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">wave</span><span class=\"p\">:</span>\n        <span class=\"n\">patch_nml</span><span class=\"o\">.</span><span class=\"n\">patch</span><span class=\"p\">(</span>\n            <span class=\"p\">{</span>\n                <span class=\"s1\">&#39;CORE&#39;</span><span class=\"p\">:{</span>\n                    <span class=\"s1\">&#39;msc2&#39;</span><span class=\"p\">:</span> <span class=\"mi\">12</span><span class=\"p\">,</span>\n                    <span class=\"s1\">&#39;mdc2&#39;</span><span class=\"p\">:</span> <span class=\"mi\">12</span>\n                <span class=\"p\">},</span>\n                <span class=\"s1\">&#39;OPT&#39;</span><span class=\"p\">:{</span>\n                    <span class=\"s1\">&#39;icou_elfe_wwm&#39;</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n                    <span class=\"s1\">&#39;nstep_wwm&#39;</span><span class=\"p\">:</span> <span class=\"mi\">6</span><span class=\"p\">,</span>\n                    <span class=\"s1\">&#39;cur_wwm&#39;</span><span class=\"p\">:</span><span class=\"mi\">1</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"n\">f90nml</span><span class=\"o\">.</span><span class=\"n\">patch</span><span class=\"p\">(</span><span class=\"n\">param_template_file</span><span class=\"p\">,</span> <span class=\"n\">patch_nml</span><span class=\"p\">,</span> <span class=\"n\">param_output_file</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">create_wwminput</span><span class=\"p\">(</span><span class=\"n\">param_nml_file</span><span class=\"p\">,</span> <span class=\"n\">wwminput_template_file</span><span class=\"p\">,</span> <span class=\"n\">wwminput_output_file</span><span class=\"p\">):</span>\n    <span class=\"n\">param_nml</span> <span class=\"o\">=</span> <span class=\"n\">f90nml</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">(</span><span class=\"n\">param_nml_file</span><span class=\"p\">)</span>\n\n    <span class=\"n\">rnday</span> <span class=\"o\">=</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">param_nml</span><span class=\"p\">[</span><span class=\"s1\">&#39;CORE&#39;</span><span class=\"p\">][</span><span class=\"s1\">&#39;rnday&#39;</span><span class=\"p\">])</span>\n\n    <span class=\"n\">start_year</span> <span class=\"o\">=</span> <span class=\"n\">param_nml</span><span class=\"p\">[</span><span class=\"s1\">&#39;OPT&#39;</span><span class=\"p\">][</span><span class=\"s1\">&#39;start_year&#39;</span><span class=\"p\">]</span>\n    <span class=\"n\">start_month</span> <span class=\"o\">=</span> <span class=\"n\">param_nml</span><span class=\"p\">[</span><span class=\"s1\">&#39;OPT&#39;</span><span class=\"p\">][</span><span class=\"s1\">&#39;start_month&#39;</span><span class=\"p\">]</span>\n    <span class=\"n\">start_day</span> <span class=\"o\">=</span> <span class=\"n\">param_nml</span><span class=\"p\">[</span><span class=\"s1\">&#39;OPT&#39;</span><span class=\"p\">][</span><span class=\"s1\">&#39;start_day&#39;</span><span class=\"p\">]</span>\n    <span class=\"n\">start_hour</span> <span class=\"o\">=</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">param_nml</span><span class=\"p\">[</span><span class=\"s1\">&#39;OPT&#39;</span><span class=\"p\">][</span><span class=\"s1\">&#39;start_hour&#39;</span><span class=\"p\">])</span>\n    <span class=\"n\">start_minute</span> <span class=\"o\">=</span> <span class=\"n\">start_hour</span><span class=\"o\">%</span><span class=\"mi\">1</span> <span class=\"o\">*</span> <span class=\"mi\">60</span>\n    <span class=\"n\">start_hour</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">floor</span><span class=\"p\">(</span><span class=\"n\">start_hour</span><span class=\"p\">)</span>\n    <span class=\"n\">start_second</span> <span class=\"o\">=</span> <span class=\"n\">start_minute</span><span class=\"o\">%</span><span class=\"mi\">1</span> <span class=\"o\">*</span> <span class=\"mi\">60</span>\n    <span class=\"n\">start_minute</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">floor</span><span class=\"p\">(</span><span class=\"n\">start_minute</span><span class=\"p\">)</span>\n    <span class=\"n\">start_second</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">floor</span><span class=\"p\">(</span><span class=\"n\">start_second</span><span class=\"p\">)</span>\n    <span class=\"n\">start_time</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">to_datetime</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">&#39;</span><span class=\"si\">{</span><span class=\"n\">start_year</span><span class=\"si\">:</span><span class=\"s1\">04d</span><span class=\"si\">}</span><span class=\"s1\">-</span><span class=\"si\">{</span><span class=\"n\">start_month</span><span class=\"si\">:</span><span class=\"s1\">02d</span><span class=\"si\">}</span><span class=\"s1\">-</span><span class=\"si\">{</span><span class=\"n\">start_day</span><span class=\"si\">:</span><span class=\"s1\">02d</span><span class=\"si\">}</span><span class=\"s1\"> </span><span class=\"si\">{</span><span class=\"n\">start_hour</span><span class=\"si\">:</span><span class=\"s1\">02.0f</span><span class=\"si\">}</span><span class=\"s1\">:</span><span class=\"si\">{</span><span class=\"n\">start_minute</span><span class=\"si\">:</span><span class=\"s1\">02.0f</span><span class=\"si\">}</span><span class=\"s1\">:</span><span class=\"si\">{</span><span class=\"n\">start_second</span><span class=\"si\">:</span><span class=\"s1\">02.0f</span><span class=\"si\">}</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">end_time</span> <span class=\"o\">=</span> <span class=\"n\">start_time</span> <span class=\"o\">+</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">Timedelta</span><span class=\"p\">(</span><span class=\"n\">rnday</span><span class=\"p\">,</span> <span class=\"n\">unit</span><span class=\"o\">=</span><span class=\"s1\">&#39;D&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"n\">patch_nml</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s1\">&#39;PROC&#39;</span><span class=\"p\">:{</span>\n            <span class=\"s1\">&#39;BEGTC&#39;</span><span class=\"p\">:</span><span class=\"n\">start_time</span><span class=\"o\">.</span><span class=\"n\">strftime</span><span class=\"p\">(</span><span class=\"s1\">&#39;%Y%m</span><span class=\"si\">%d</span><span class=\"s1\">.%H%M%S&#39;</span><span class=\"p\">),</span>\n            <span class=\"s1\">&#39;DELTC&#39;</span><span class=\"p\">:</span><span class=\"n\">param_nml</span><span class=\"p\">[</span><span class=\"s1\">&#39;CORE&#39;</span><span class=\"p\">][</span><span class=\"s1\">&#39;dt&#39;</span><span class=\"p\">]</span><span class=\"o\">*</span><span class=\"n\">param_nml</span><span class=\"p\">[</span><span class=\"s1\">&#39;OPT&#39;</span><span class=\"p\">][</span><span class=\"s1\">&#39;nstep_wwm&#39;</span><span class=\"p\">],</span>\n            <span class=\"s1\">&#39;UNITC&#39;</span><span class=\"p\">:</span><span class=\"s1\">&#39;SEC&#39;</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;ENDTC&#39;</span><span class=\"p\">:</span><span class=\"n\">end_time</span><span class=\"o\">.</span><span class=\"n\">strftime</span><span class=\"p\">(</span><span class=\"s1\">&#39;%Y%m</span><span class=\"si\">%d</span><span class=\"s1\">.%H%M%S&#39;</span><span class=\"p\">),</span>\n            <span class=\"s1\">&#39;DMIN&#39;</span><span class=\"p\">:</span><span class=\"n\">param_nml</span><span class=\"p\">[</span><span class=\"s1\">&#39;OPT&#39;</span><span class=\"p\">][</span><span class=\"s1\">&#39;h0&#39;</span><span class=\"p\">]</span>\n        <span class=\"p\">},</span>\n        <span class=\"s1\">&#39;GRID&#39;</span><span class=\"p\">:{</span>\n            <span class=\"s1\">&#39;MSC&#39;</span><span class=\"p\">:</span><span class=\"n\">param_nml</span><span class=\"p\">[</span><span class=\"s1\">&#39;CORE&#39;</span><span class=\"p\">][</span><span class=\"s1\">&#39;msc2&#39;</span><span class=\"p\">],</span>\n            <span class=\"s1\">&#39;MDC&#39;</span><span class=\"p\">:</span><span class=\"n\">param_nml</span><span class=\"p\">[</span><span class=\"s1\">&#39;CORE&#39;</span><span class=\"p\">][</span><span class=\"s1\">&#39;mdc2&#39;</span><span class=\"p\">]</span>\n        <span class=\"p\">},</span>\n        <span class=\"s1\">&#39;BOUC&#39;</span><span class=\"p\">:{</span>\n            <span class=\"s1\">&#39;BEGTC&#39;</span><span class=\"p\">:</span><span class=\"n\">start_time</span><span class=\"o\">.</span><span class=\"n\">strftime</span><span class=\"p\">(</span><span class=\"s1\">&#39;%Y%m</span><span class=\"si\">%d</span><span class=\"s1\">.%H%M%S&#39;</span><span class=\"p\">),</span>\n            <span class=\"s1\">&#39;ENDTC&#39;</span><span class=\"p\">:</span><span class=\"n\">end_time</span><span class=\"o\">.</span><span class=\"n\">strftime</span><span class=\"p\">(</span><span class=\"s1\">&#39;%Y%m</span><span class=\"si\">%d</span><span class=\"s1\">.%H%M%S&#39;</span><span class=\"p\">)</span>\n        <span class=\"p\">},</span>\n        <span class=\"s1\">&#39;HISTORY&#39;</span><span class=\"p\">:{</span>\n            <span class=\"s1\">&#39;BEGTC&#39;</span><span class=\"p\">:</span><span class=\"n\">start_time</span><span class=\"o\">.</span><span class=\"n\">strftime</span><span class=\"p\">(</span><span class=\"s1\">&#39;%Y%m</span><span class=\"si\">%d</span><span class=\"s1\">.%H%M%S&#39;</span><span class=\"p\">),</span>\n            <span class=\"s1\">&#39;ENDTC&#39;</span><span class=\"p\">:</span><span class=\"n\">end_time</span><span class=\"o\">.</span><span class=\"n\">strftime</span><span class=\"p\">(</span><span class=\"s1\">&#39;%Y%m</span><span class=\"si\">%d</span><span class=\"s1\">.%H%M%S&#39;</span><span class=\"p\">),</span>\n            <span class=\"s1\">&#39;OUTSTYLE&#39;</span><span class=\"p\">:</span><span class=\"s1\">&#39;NO&#39;</span>\n        <span class=\"p\">},</span>\n        <span class=\"s1\">&#39;STATION&#39;</span><span class=\"p\">:{</span>\n            <span class=\"s1\">&#39;BEGTC&#39;</span><span class=\"p\">:</span><span class=\"n\">start_time</span><span class=\"o\">.</span><span class=\"n\">strftime</span><span class=\"p\">(</span><span class=\"s1\">&#39;%Y%m</span><span class=\"si\">%d</span><span class=\"s1\">.%H%M%S&#39;</span><span class=\"p\">),</span>\n            <span class=\"s1\">&#39;ENDTC&#39;</span><span class=\"p\">:</span><span class=\"n\">end_time</span><span class=\"o\">.</span><span class=\"n\">strftime</span><span class=\"p\">(</span><span class=\"s1\">&#39;%Y%m</span><span class=\"si\">%d</span><span class=\"s1\">.%H%M%S&#39;</span><span class=\"p\">),</span>\n            <span class=\"s1\">&#39;OUTSTYLE&#39;</span><span class=\"p\">:</span><span class=\"s1\">&#39;STE&#39;</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;DEFINETC&#39;</span><span class=\"p\">:</span><span class=\"o\">-</span><span class=\"mi\">1</span>\n        <span class=\"p\">},</span>\n        <span class=\"s1\">&#39;HOTFILE&#39;</span><span class=\"p\">:{</span>\n            <span class=\"s1\">&#39;BEGTC&#39;</span><span class=\"p\">:</span><span class=\"n\">start_time</span><span class=\"o\">.</span><span class=\"n\">strftime</span><span class=\"p\">(</span><span class=\"s1\">&#39;%Y%m</span><span class=\"si\">%d</span><span class=\"s1\">.%H%M%S&#39;</span><span class=\"p\">),</span>\n            <span class=\"s1\">&#39;ENDTC&#39;</span><span class=\"p\">:</span><span class=\"n\">end_time</span><span class=\"o\">.</span><span class=\"n\">strftime</span><span class=\"p\">(</span><span class=\"s1\">&#39;%Y%m</span><span class=\"si\">%d</span><span class=\"s1\">.%H%M%S&#39;</span><span class=\"p\">)</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"n\">f90nml</span><span class=\"o\">.</span><span class=\"n\">patch</span><span class=\"p\">(</span><span class=\"n\">wwminput_template_file</span><span class=\"p\">,</span> <span class=\"n\">patch_nml</span><span class=\"p\">,</span> <span class=\"n\">wwminput_output_file</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">template_script</span><span class=\"p\">(</span><span class=\"n\">template</span><span class=\"p\">,</span> <span class=\"n\">cycledir</span><span class=\"p\">):</span>\n    <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">template</span><span class=\"p\">,</span> <span class=\"s1\">&#39;r&#39;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n        <span class=\"n\">ds</span> <span class=\"o\">=</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n\n    <span class=\"n\">ds</span> <span class=\"o\">=</span> <span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">&#39;&lt;cycle&gt;&#39;</span><span class=\"p\">,</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">basename</span><span class=\"p\">(</span><span class=\"n\">cycledir</span><span class=\"p\">))</span>\n\n    <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">cycledir</span><span class=\"p\">,</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">basename</span><span class=\"p\">(</span><span class=\"n\">template</span><span class=\"p\">)),</span> <span class=\"s1\">&#39;w&#39;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n        <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">ds</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">model_generate</span><span class=\"p\">(</span><span class=\"n\">cycle</span><span class=\"p\">,</span> <span class=\"n\">fdir_paths</span><span class=\"p\">,</span> <span class=\"n\">forecast_config</span><span class=\"p\">,</span> <span class=\"n\">executables</span><span class=\"p\">):</span>\n    <span class=\"n\">cycle_config</span> <span class=\"o\">=</span> <span class=\"n\">init_cycle</span><span class=\"p\">(</span><span class=\"n\">cycle</span><span class=\"o\">=</span><span class=\"n\">cycle</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">forecast_config</span><span class=\"p\">)</span>\n    <span class=\"n\">cycle_dir</span> <span class=\"o\">=</span> <span class=\"n\">GithubDirectory</span><span class=\"p\">(</span>\n        <span class=\"n\">fdir</span><span class=\"o\">=</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">fdir_paths</span><span class=\"p\">[</span><span class=\"s1\">&#39;forecasts_dir&#39;</span><span class=\"p\">],</span> <span class=\"n\">cycle_config</span><span class=\"p\">[</span><span class=\"s1\">&#39;cycle&#39;</span><span class=\"p\">]),</span> \n        <span class=\"n\">username</span><span class=\"o\">=</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"s1\">&#39;GH_USER&#39;</span><span class=\"p\">],</span> \n        <span class=\"n\">access_token</span><span class=\"o\">=</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"s1\">&#39;GH_TOKEN&#39;</span><span class=\"p\">],</span> \n        <span class=\"n\">license</span><span class=\"o\">=</span><span class=\"s1\">&#39;mit&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># GFS data creation</span>\n    <span class=\"n\">fname_gfs</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">cycle_dir</span><span class=\"o\">.</span><span class=\"n\">fdir</span><span class=\"p\">,</span> <span class=\"s1\">&#39;gfs.nc&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">create_gfs_data</span><span class=\"p\">(</span>\n        <span class=\"n\">start_date</span><span class=\"o\">=</span><span class=\"n\">cycle_config</span><span class=\"p\">[</span><span class=\"s1\">&#39;start_date&#39;</span><span class=\"p\">],</span> \n        <span class=\"n\">end_date</span><span class=\"o\">=</span><span class=\"n\">cycle_config</span><span class=\"p\">[</span><span class=\"s1\">&#39;end_date&#39;</span><span class=\"p\">],</span> \n        <span class=\"n\">forecast_length</span><span class=\"o\">=</span><span class=\"n\">cycle_config</span><span class=\"p\">[</span><span class=\"s1\">&#39;forecast_length&#39;</span><span class=\"p\">],</span> \n        <span class=\"n\">cycle_step</span><span class=\"o\">=</span><span class=\"n\">cycle_config</span><span class=\"p\">[</span><span class=\"s1\">&#39;cycle_step&#39;</span><span class=\"p\">],</span> \n        <span class=\"n\">fdir</span><span class=\"o\">=</span><span class=\"n\">fdir_paths</span><span class=\"p\">[</span><span class=\"s1\">&#39;gfs_dir&#39;</span><span class=\"p\">],</span> \n        <span class=\"n\">fname_pattern</span><span class=\"o\">=</span><span class=\"s1\">&#39;gfs*.nc&#39;</span><span class=\"p\">,</span> \n        <span class=\"n\">fname_out</span><span class=\"o\">=</span><span class=\"n\">fname_gfs</span><span class=\"p\">)</span>\n    <span class=\"n\">create_gfs_sflux</span><span class=\"p\">(</span>\n        <span class=\"n\">fname</span><span class=\"o\">=</span><span class=\"n\">fname_gfs</span><span class=\"p\">,</span> \n        <span class=\"n\">n_buffer_steps</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span>\n        <span class=\"n\">outpath</span><span class=\"o\">=</span><span class=\"n\">cycle_dir</span><span class=\"o\">.</span><span class=\"n\">fdir</span><span class=\"p\">,</span> \n        <span class=\"n\">step</span><span class=\"o\">=</span><span class=\"s1\">&#39;1H&#39;</span><span class=\"p\">,</span> \n        <span class=\"n\">nstep</span><span class=\"o\">=</span><span class=\"mi\">24</span><span class=\"p\">,</span> \n        <span class=\"n\">basedate</span><span class=\"o\">=</span><span class=\"s1\">&#39;1970-01-01&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Model</span>\n    <span class=\"n\">create_tidefacinput</span><span class=\"p\">(</span>\n        <span class=\"n\">start_date</span><span class=\"o\">=</span><span class=\"n\">cycle_config</span><span class=\"p\">[</span><span class=\"s1\">&#39;start_date&#39;</span><span class=\"p\">],</span> \n        <span class=\"n\">end_date</span><span class=\"o\">=</span><span class=\"n\">cycle_config</span><span class=\"p\">[</span><span class=\"s1\">&#39;end_date&#39;</span><span class=\"p\">],</span> \n        <span class=\"n\">savedir</span><span class=\"o\">=</span><span class=\"n\">cycle_dir</span><span class=\"o\">.</span><span class=\"n\">fdir</span><span class=\"p\">)</span>\n    <span class=\"n\">update_bctides</span><span class=\"p\">(</span>\n        <span class=\"n\">tidefac</span><span class=\"o\">=</span><span class=\"n\">executables</span><span class=\"p\">[</span><span class=\"s1\">&#39;tidefac_exe&#39;</span><span class=\"p\">],</span> \n        <span class=\"n\">bctides_template</span><span class=\"o\">=</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">fdir_paths</span><span class=\"p\">[</span><span class=\"s1\">&#39;config_dir&#39;</span><span class=\"p\">],</span> <span class=\"s1\">&#39;bctides.in.3.template&#39;</span><span class=\"p\">),</span> \n        <span class=\"n\">cycledir</span><span class=\"o\">=</span><span class=\"n\">cycle_dir</span><span class=\"o\">.</span><span class=\"n\">fdir</span><span class=\"p\">)</span>\n    <span class=\"n\">create_climatic_discharge</span><span class=\"p\">(</span>\n        <span class=\"n\">discharge</span><span class=\"o\">=</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">fdir_paths</span><span class=\"p\">[</span><span class=\"s1\">&#39;discharge_dir&#39;</span><span class=\"p\">],</span> <span class=\"s1\">&#39;climatic_discharge.csv&#39;</span><span class=\"p\">),</span> \n        <span class=\"n\">tidefacinput</span><span class=\"o\">=</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">cycle_dir</span><span class=\"o\">.</span><span class=\"n\">fdir</span><span class=\"p\">,</span> <span class=\"s1\">&#39;tidefacinput&#39;</span><span class=\"p\">),</span> \n        <span class=\"n\">bnds</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;Karnaphuli&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Hooghly&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Ganges&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Brahmaputra&#39;</span><span class=\"p\">],</span> \n        <span class=\"n\">outdir</span><span class=\"o\">=</span><span class=\"n\">cycle_dir</span><span class=\"o\">.</span><span class=\"n\">fdir</span><span class=\"p\">)</span> <span class=\"c1\"># Meghna is flather</span>\n    <span class=\"n\">create_param</span><span class=\"p\">(</span>\n        <span class=\"n\">tidefacinput</span><span class=\"o\">=</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">cycle_dir</span><span class=\"o\">.</span><span class=\"n\">fdir</span><span class=\"p\">,</span> <span class=\"s1\">&#39;tidefacinput&#39;</span><span class=\"p\">),</span> \n        <span class=\"n\">param_template_file</span><span class=\"o\">=</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">fdir_paths</span><span class=\"p\">[</span><span class=\"s1\">&#39;config_dir&#39;</span><span class=\"p\">],</span> <span class=\"s1\">&#39;param.nml.template&#39;</span><span class=\"p\">),</span> \n        <span class=\"n\">param_output_file</span><span class=\"o\">=</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">cycle_dir</span><span class=\"o\">.</span><span class=\"n\">fdir</span><span class=\"p\">,</span> <span class=\"s1\">&#39;param.nml&#39;</span><span class=\"p\">),</span>\n        <span class=\"n\">wave</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">create_wwminput</span><span class=\"p\">(</span>\n        <span class=\"n\">param_nml_file</span><span class=\"o\">=</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">cycle_dir</span><span class=\"o\">.</span><span class=\"n\">fdir</span><span class=\"p\">,</span> <span class=\"s1\">&#39;param.nml&#39;</span><span class=\"p\">),</span>\n        <span class=\"n\">wwminput_template_file</span><span class=\"o\">=</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">fdir_paths</span><span class=\"p\">[</span><span class=\"s1\">&#39;config_dir&#39;</span><span class=\"p\">],</span> <span class=\"s1\">&#39;wwminput.nml.nobnd.template&#39;</span><span class=\"p\">),</span>\n        <span class=\"n\">wwminput_output_file</span><span class=\"o\">=</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">cycle_dir</span><span class=\"o\">.</span><span class=\"n\">fdir</span><span class=\"p\">,</span> <span class=\"s1\">&#39;wwminput.nml&#39;</span><span class=\"p\">)</span>\n    <span class=\"p\">)</span>\n    <span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">call</span><span class=\"p\">([</span><span class=\"s1\">&#39;cp&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;-v&#39;</span><span class=\"p\">,</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">fdir_paths</span><span class=\"p\">[</span><span class=\"s1\">&#39;config_dir&#39;</span><span class=\"p\">],</span> <span class=\"s1\">&#39;hgrid.gr3.3.template&#39;</span><span class=\"p\">),</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">cycle_dir</span><span class=\"o\">.</span><span class=\"n\">fdir</span><span class=\"p\">,</span> <span class=\"s1\">&#39;hgrid.gr3&#39;</span><span class=\"p\">)])</span>\n    <span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">call</span><span class=\"p\">([</span><span class=\"s1\">&#39;cp&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;-v&#39;</span><span class=\"p\">,</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">cycle_dir</span><span class=\"o\">.</span><span class=\"n\">fdir</span><span class=\"p\">,</span> <span class=\"s1\">&#39;hgrid.gr3&#39;</span><span class=\"p\">),</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">cycle_dir</span><span class=\"o\">.</span><span class=\"n\">fdir</span><span class=\"p\">,</span> <span class=\"s1\">&#39;hgrid.ll&#39;</span><span class=\"p\">)])</span>\n    <span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">call</span><span class=\"p\">([</span><span class=\"s1\">&#39;cp&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;-v&#39;</span><span class=\"p\">,</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">cycle_dir</span><span class=\"o\">.</span><span class=\"n\">fdir</span><span class=\"p\">,</span> <span class=\"s1\">&#39;hgrid.gr3&#39;</span><span class=\"p\">),</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">cycle_dir</span><span class=\"o\">.</span><span class=\"n\">fdir</span><span class=\"p\">,</span> <span class=\"s1\">&#39;hgrid_WWM.gr3&#39;</span><span class=\"p\">)])</span>\n    <span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">call</span><span class=\"p\">([</span><span class=\"s1\">&#39;cp&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;-v&#39;</span><span class=\"p\">,</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">fdir_paths</span><span class=\"p\">[</span><span class=\"s1\">&#39;config_dir&#39;</span><span class=\"p\">],</span> <span class=\"s1\">&#39;vgrid.in.2D.template&#39;</span><span class=\"p\">),</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">cycle_dir</span><span class=\"o\">.</span><span class=\"n\">fdir</span><span class=\"p\">,</span> <span class=\"s1\">&#39;vgrid.in&#39;</span><span class=\"p\">)])</span>\n    <span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">call</span><span class=\"p\">([</span><span class=\"s1\">&#39;cp&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;-v&#39;</span><span class=\"p\">,</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">fdir_paths</span><span class=\"p\">[</span><span class=\"s1\">&#39;config_dir&#39;</span><span class=\"p\">],</span> <span class=\"s1\">&#39;manning.gr3.3.template&#39;</span><span class=\"p\">),</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">cycle_dir</span><span class=\"o\">.</span><span class=\"n\">fdir</span><span class=\"p\">,</span> <span class=\"s1\">&#39;manning.gr3&#39;</span><span class=\"p\">)])</span>\n    <span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">call</span><span class=\"p\">([</span><span class=\"s1\">&#39;cp&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;-v&#39;</span><span class=\"p\">,</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">fdir_paths</span><span class=\"p\">[</span><span class=\"s1\">&#39;config_dir&#39;</span><span class=\"p\">],</span> <span class=\"s1\">&#39;windrot_geo2proj.gr3.template&#39;</span><span class=\"p\">),</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">cycle_dir</span><span class=\"o\">.</span><span class=\"n\">fdir</span><span class=\"p\">,</span> <span class=\"s1\">&#39;windrot_geo2proj.gr3&#39;</span><span class=\"p\">)])</span>\n    <span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">call</span><span class=\"p\">([</span><span class=\"s1\">&#39;cp&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;-v&#39;</span><span class=\"p\">,</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">fdir_paths</span><span class=\"p\">[</span><span class=\"s1\">&#39;config_dir&#39;</span><span class=\"p\">],</span> <span class=\"s1\">&#39;station.in.3.template&#39;</span><span class=\"p\">),</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">cycle_dir</span><span class=\"o\">.</span><span class=\"n\">fdir</span><span class=\"p\">,</span> <span class=\"s1\">&#39;station.in&#39;</span><span class=\"p\">)])</span>\n    <span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">call</span><span class=\"p\">([</span><span class=\"s1\">&#39;cp&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;-v&#39;</span><span class=\"p\">,</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">fdir_paths</span><span class=\"p\">[</span><span class=\"s1\">&#39;config_dir&#39;</span><span class=\"p\">],</span> <span class=\"s1\">&#39;wwmbnd.gr3.inactive&#39;</span><span class=\"p\">),</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">cycle_dir</span><span class=\"o\">.</span><span class=\"n\">fdir</span><span class=\"p\">,</span> <span class=\"s1\">&#39;wwmbnd.gr3&#39;</span><span class=\"p\">)])</span>\n\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">cycle_dir</span><span class=\"o\">.</span><span class=\"n\">fdir</span><span class=\"p\">,</span> <span class=\"s1\">&#39;outputs&#39;</span><span class=\"p\">)):</span>\n        <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">mkdir</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">cycle_dir</span><span class=\"o\">.</span><span class=\"n\">fdir</span><span class=\"p\">,</span> <span class=\"s1\">&#39;outputs&#39;</span><span class=\"p\">))</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span><span class=\"o\">==</span><span class=\"s1\">&#39;__main__&#39;</span><span class=\"p\">:</span>\n    <span class=\"c1\"># Root directory</span>\n    <span class=\"n\">root_dir</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;/mnt&#39;</span>\n\n    <span class=\"c1\"># log file</span>\n    <span class=\"c1\"># DEBUG, INFO, WARNING, ERROR, CRITICAL</span>\n    <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">basicConfig</span><span class=\"p\">(</span>\n        <span class=\"n\">filename</span><span class=\"o\">=</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">root_dir</span><span class=\"p\">,</span> <span class=\"s1\">&#39;bandsos.log&#39;</span><span class=\"p\">),</span> \n        <span class=\"n\">level</span><span class=\"o\">=</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">DEBUG</span><span class=\"p\">,</span> \n        <span class=\"n\">filemode</span><span class=\"o\">=</span><span class=\"s1\">&#39;w&#39;</span><span class=\"p\">,</span> \n        <span class=\"nb\">format</span><span class=\"o\">=</span><span class=\"s1\">&#39;</span><span class=\"si\">%(asctime)s</span><span class=\"s1\"> - </span><span class=\"si\">%(levelname)s</span><span class=\"s1\"> - </span><span class=\"si\">%(message)s</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Check environment variables GH_USER, GH_TOKEN, PRODUCER, EMAIL</span>\n    <span class=\"n\">required_envs</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">&#39;GH_USER&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;GH_TOKEN&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;PRODUCER&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;EMAIL&#39;</span><span class=\"p\">]</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">env</span> <span class=\"ow\">in</span> <span class=\"n\">required_envs</span><span class=\"p\">:</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"k\">assert</span> <span class=\"n\">env</span> <span class=\"ow\">in</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span>\n            <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">&#39;</span><span class=\"si\">{</span><span class=\"n\">env</span><span class=\"si\">}</span><span class=\"s1\"> is found in system environment&#39;</span><span class=\"p\">)</span>\n        <span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">Exception</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">,</span> <span class=\"sa\">f</span><span class=\"s1\">&#39;</span><span class=\"si\">{</span><span class=\"n\">env</span><span class=\"si\">}</span><span class=\"s1\"> is not found inthe system environment. Have you passed .env file to docker?&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Git setups</span>\n    <span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">check_call</span><span class=\"p\">([</span><span class=\"s1\">&#39;git&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;config&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;--global&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;init.defaultBranch&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;main&#39;</span><span class=\"p\">])</span>\n    <span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">check_call</span><span class=\"p\">([</span><span class=\"s1\">&#39;git&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;config&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;--global&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;--add&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;safe.directory&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;*&#39;</span><span class=\"p\">])</span>\n\n    <span class=\"c1\"># Directory setup</span>\n    <span class=\"n\">fdir_paths</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s1\">&#39;config_dir&#39;</span><span class=\"p\">:</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">root_dir</span><span class=\"p\">,</span> <span class=\"s1\">&#39;config&#39;</span><span class=\"p\">),</span>\n        <span class=\"s1\">&#39;fluxes_dir&#39;</span><span class=\"p\">:</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">root_dir</span><span class=\"p\">,</span> <span class=\"s1\">&#39;fluxes&#39;</span><span class=\"p\">),</span>\n        <span class=\"s1\">&#39;gfs_dir&#39;</span><span class=\"p\">:</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">root_dir</span><span class=\"p\">,</span> <span class=\"s1\">&#39;fluxes&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;gfs&#39;</span><span class=\"p\">),</span>\n        <span class=\"s1\">&#39;hwrf_dir&#39;</span><span class=\"p\">:</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">root_dir</span><span class=\"p\">,</span> <span class=\"s1\">&#39;fluxes&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;hwrf&#39;</span><span class=\"p\">),</span>\n        <span class=\"s1\">&#39;jtwc_dir&#39;</span><span class=\"p\">:</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">root_dir</span><span class=\"p\">,</span> <span class=\"s1\">&#39;fluxes&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;jtwc&#39;</span><span class=\"p\">),</span>\n        <span class=\"s1\">&#39;discharge_dir&#39;</span><span class=\"p\">:</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">root_dir</span><span class=\"p\">,</span> <span class=\"s1\">&#39;fluxes&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;discharge&#39;</span><span class=\"p\">),</span>\n        <span class=\"s1\">&#39;forecasts_dir&#39;</span><span class=\"p\">:</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">root_dir</span><span class=\"p\">,</span> <span class=\"s1\">&#39;forecasts&#39;</span><span class=\"p\">),</span>\n        <span class=\"s1\">&#39;log_dir&#39;</span><span class=\"p\">:</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">root_dir</span><span class=\"p\">,</span> <span class=\"s1\">&#39;logs&#39;</span><span class=\"p\">),</span>\n        <span class=\"s1\">&#39;status_dir&#39;</span><span class=\"p\">:</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">root_dir</span><span class=\"p\">,</span> <span class=\"s1\">&#39;status&#39;</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"n\">forecast_config</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s1\">&#39;model_spinup&#39;</span><span class=\"p\">:</span><span class=\"s1\">&#39;2D&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;forecast_length&#39;</span><span class=\"p\">:</span><span class=\"s1\">&#39;5D&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;cycle_step&#39;</span><span class=\"p\">:</span><span class=\"s1\">&#39;6H&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;cycle_format&#39;</span><span class=\"p\">:</span><span class=\"s1\">&#39;%Y%m</span><span class=\"si\">%d</span><span class=\"s1\">%H&#39;</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"c1\"># Programs</span>\n    <span class=\"n\">executables</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s1\">&#39;tidefac_exe&#39;</span><span class=\"p\">:</span><span class=\"n\">shutil</span><span class=\"o\">.</span><span class=\"n\">which</span><span class=\"p\">(</span><span class=\"s1\">&#39;tidefac&#39;</span><span class=\"p\">),</span>\n        <span class=\"s1\">&#39;schism_WWM_exe&#39;</span><span class=\"p\">:</span><span class=\"n\">shutil</span><span class=\"o\">.</span><span class=\"n\">which</span><span class=\"p\">(</span><span class=\"s1\">&#39;pschism_WWM_TVD-VL&#39;</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"c1\"># Initiating status file</span>\n    <span class=\"n\">status_dir</span> <span class=\"o\">=</span> <span class=\"n\">GithubDirectory</span><span class=\"p\">(</span>\n        <span class=\"n\">fdir</span><span class=\"o\">=</span><span class=\"n\">fdir_paths</span><span class=\"p\">[</span><span class=\"s1\">&#39;status_dir&#39;</span><span class=\"p\">],</span> \n        <span class=\"n\">username</span><span class=\"o\">=</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"s1\">&#39;GH_USER&#39;</span><span class=\"p\">],</span> \n        <span class=\"n\">access_token</span><span class=\"o\">=</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"s1\">&#39;GH_TOKEN&#39;</span><span class=\"p\">]</span>\n        <span class=\"p\">)</span>\n    <span class=\"n\">status_file</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">status_dir</span><span class=\"o\">.</span><span class=\"n\">fdir</span><span class=\"p\">,</span> <span class=\"s1\">&#39;status.json&#39;</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">status_file</span><span class=\"p\">):</span>\n        <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">status_file</span><span class=\"p\">,</span> <span class=\"s1\">&#39;r&#39;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n            <span class=\"n\">status</span> <span class=\"o\">=</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">)</span>\n        <span class=\"n\">status</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">({</span><span class=\"s1\">&#39;producer&#39;</span><span class=\"p\">:</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"s1\">&#39;PRODUCER&#39;</span><span class=\"p\">]})</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">status</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s1\">&#39;cycle&#39;</span><span class=\"p\">:</span><span class=\"s1\">&#39;cycle&#39;</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;producer&#39;</span><span class=\"p\">:</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"s1\">&#39;PRODUCER&#39;</span><span class=\"p\">],</span>\n            <span class=\"s1\">&#39;status&#39;</span><span class=\"p\">:</span><span class=\"s1\">&#39;published&#39;</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;lastupdate&#39;</span><span class=\"p\">:</span><span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">to_datetime</span><span class=\"p\">(</span><span class=\"s1\">&#39;now&#39;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">strftime</span><span class=\"p\">(</span><span class=\"s1\">&#39;%Y-%m-</span><span class=\"si\">%d</span><span class=\"s1\"> %H:%M:%S&#39;</span><span class=\"p\">),</span>\n            <span class=\"s1\">&#39;lastforecast&#39;</span><span class=\"p\">:{</span>\n                <span class=\"s1\">&#39;date&#39;</span><span class=\"p\">:</span><span class=\"s1\">&#39;2020-05-17&#39;</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;cycle&#39;</span><span class=\"p\">:</span><span class=\"s1\">&#39;00&#39;</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n        <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">status_file</span><span class=\"p\">,</span> <span class=\"s1\">&#39;w&#39;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n            <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dump</span><span class=\"p\">(</span><span class=\"n\">status</span><span class=\"p\">,</span> <span class=\"n\">f</span><span class=\"p\">,</span> <span class=\"n\">indent</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">separators</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s1\">&#39;, &#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;: &#39;</span><span class=\"p\">))</span>\n\n        <span class=\"n\">status_dir</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">fpaths</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">status_file</span><span class=\"p\">],</span> <span class=\"n\">message</span><span class=\"o\">=</span><span class=\"sa\">f</span><span class=\"s1\">&#39;:tada: Creates status repository&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># data sources</span>\n    <span class=\"n\">gfs</span> <span class=\"o\">=</span> <span class=\"n\">GFS_0p25_1hr</span><span class=\"p\">(</span><span class=\"n\">data_dir</span><span class=\"o\">=</span><span class=\"n\">fdir_paths</span><span class=\"p\">[</span><span class=\"s1\">&#39;gfs_dir&#39;</span><span class=\"p\">],</span> <span class=\"n\">data_prefix</span><span class=\"o\">=</span><span class=\"s1\">&#39;gfs_&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">extent</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">75</span><span class=\"p\">,</span> <span class=\"mi\">102</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">]</span>\n\n    <span class=\"c1\"># Forecast loop</span>\n    <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n        <span class=\"c1\"># Check if a new gfs forecast is available</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">gfs_available</span> <span class=\"o\">=</span> <span class=\"n\">gfs</span><span class=\"o\">.</span><span class=\"n\">check</span><span class=\"p\">()</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s1\">&#39;Could not check GFS data... Going to try in 10 minutes.&#39;</span><span class=\"p\">)</span>\n\n        <span class=\"n\">cycle</span> <span class=\"o\">=</span> <span class=\"n\">gfs</span><span class=\"o\">.</span><span class=\"n\">last</span> <span class=\"c1\"># yyyymmddhh format</span>\n\n        <span class=\"c1\"># Check if last forecast is already done by checking if there is manifest file in the forecast directory</span>\n        <span class=\"n\">cycle_dir</span> <span class=\"o\">=</span> <span class=\"n\">GithubDirectory</span><span class=\"p\">(</span>\n            <span class=\"n\">fdir</span><span class=\"o\">=</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">fdir_paths</span><span class=\"p\">[</span><span class=\"s1\">&#39;forecasts_dir&#39;</span><span class=\"p\">],</span> <span class=\"n\">cycle</span><span class=\"p\">),</span> \n            <span class=\"n\">username</span><span class=\"o\">=</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"s1\">&#39;GH_USER&#39;</span><span class=\"p\">],</span> \n            <span class=\"n\">access_token</span><span class=\"o\">=</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"s1\">&#39;GH_TOKEN&#39;</span><span class=\"p\">],</span> \n            <span class=\"n\">license</span><span class=\"o\">=</span><span class=\"s1\">&#39;mit&#39;</span><span class=\"p\">)</span>\n\n        <span class=\"n\">cycle_manifest_available</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">cycle_dir</span><span class=\"o\">.</span><span class=\"n\">fdir</span><span class=\"p\">,</span> <span class=\"s1\">&#39;manifest.json&#39;</span><span class=\"p\">))</span>\n        <span class=\"n\">reforecast_needed</span> <span class=\"o\">=</span> <span class=\"ow\">not</span> <span class=\"n\">cycle_manifest_available</span>\n        <span class=\"k\">if</span> <span class=\"n\">cycle_manifest_available</span><span class=\"p\">:</span>\n            <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">&#39;</span><span class=\"si\">{</span><span class=\"n\">cycle</span><span class=\"si\">}</span><span class=\"s1\"> already done.&#39;</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">&#39;</span><span class=\"si\">{</span><span class=\"n\">cycle</span><span class=\"si\">}</span><span class=\"s1\"> needs to be run.&#39;</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Starting forecast or going to sleep based on availability condition</span>\n        <span class=\"k\">if</span> <span class=\"n\">gfs_available</span> <span class=\"ow\">or</span> <span class=\"n\">reforecast_needed</span><span class=\"p\">:</span>\n            <span class=\"n\">status</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span>\n                <span class=\"p\">{</span>\n                    <span class=\"s1\">&#39;cycle&#39;</span><span class=\"p\">:</span><span class=\"n\">cycle</span><span class=\"p\">,</span>\n                    <span class=\"s1\">&#39;status&#39;</span><span class=\"p\">:</span><span class=\"s1\">&#39;ongoing&#39;</span><span class=\"p\">,</span>\n                    <span class=\"s1\">&#39;lastupdate&#39;</span><span class=\"p\">:</span><span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">to_datetime</span><span class=\"p\">(</span><span class=\"s1\">&#39;now&#39;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">strftime</span><span class=\"p\">(</span><span class=\"s1\">&#39;%Y-%m-</span><span class=\"si\">%d</span><span class=\"s1\"> %H:%M:%S&#39;</span><span class=\"p\">)</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">)</span>\n\n            <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">status_file</span><span class=\"p\">,</span> <span class=\"s1\">&#39;w&#39;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n                <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dump</span><span class=\"p\">(</span><span class=\"n\">status</span><span class=\"p\">,</span> <span class=\"n\">f</span><span class=\"p\">,</span> <span class=\"n\">indent</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">separators</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s1\">&#39;, &#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;: &#39;</span><span class=\"p\">))</span>\n\n            <span class=\"n\">status_dir</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">fpaths</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">status_file</span><span class=\"p\">],</span> <span class=\"n\">message</span><span class=\"o\">=</span><span class=\"sa\">f</span><span class=\"s1\">&#39;:tada: </span><span class=\"si\">{</span><span class=\"n\">cycle</span><span class=\"si\">}</span><span class=\"s1\"> is ongoing&#39;</span><span class=\"p\">)</span>\n            <span class=\"n\">gfs</span><span class=\"o\">.</span><span class=\"n\">download</span><span class=\"p\">(</span><span class=\"n\">extent</span><span class=\"o\">=</span><span class=\"n\">extent</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s1\">&#39;No new cycle available... Going to check servers in 10 minutes.&#39;</span><span class=\"p\">)</span>\n            <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"o\">*</span><span class=\"mi\">60</span><span class=\"p\">)</span> <span class=\"c1\"># seconds</span>\n            <span class=\"k\">continue</span>\n\n        <span class=\"c1\"># Model generation</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">model_generate</span><span class=\"p\">(</span><span class=\"n\">cycle</span><span class=\"o\">=</span><span class=\"n\">cycle</span><span class=\"p\">,</span> <span class=\"n\">fdir_paths</span><span class=\"o\">=</span><span class=\"n\">fdir_paths</span><span class=\"p\">,</span> <span class=\"n\">forecast_config</span><span class=\"o\">=</span><span class=\"n\">forecast_config</span><span class=\"p\">,</span> <span class=\"n\">executables</span><span class=\"o\">=</span><span class=\"n\">executables</span><span class=\"p\">)</span>\n        <span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n            <span class=\"n\">log_file</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">fdir_paths</span><span class=\"p\">[</span><span class=\"s1\">&#39;log_dir&#39;</span><span class=\"p\">],</span> <span class=\"sa\">f</span><span class=\"s1\">&#39;</span><span class=\"si\">{</span><span class=\"n\">cycle</span><span class=\"si\">}</span><span class=\"s1\">.fatal&#39;</span><span class=\"p\">)</span>\n            <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">&#39;Model could not be generated for cycle </span><span class=\"si\">{</span><span class=\"n\">cycle</span><span class=\"si\">}</span><span class=\"s1\">. Check </span><span class=\"si\">{</span><span class=\"n\">log_file</span><span class=\"si\">}</span><span class=\"s1\">.&#39;</span><span class=\"p\">)</span>\n            <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">log_file</span><span class=\"p\">,</span> <span class=\"s1\">&#39;w&#39;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n                <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"nb\">repr</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">))</span>\n\n            <span class=\"n\">status</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span>\n                <span class=\"p\">{</span>\n                    <span class=\"s1\">&#39;cycle&#39;</span><span class=\"p\">:</span><span class=\"n\">cycle</span><span class=\"p\">,</span>\n                    <span class=\"s1\">&#39;status&#39;</span><span class=\"p\">:</span><span class=\"s1\">&#39;failed&#39;</span><span class=\"p\">,</span>\n                    <span class=\"s1\">&#39;lastupdate&#39;</span><span class=\"p\">:</span><span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">to_datetime</span><span class=\"p\">(</span><span class=\"s1\">&#39;now&#39;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">strftime</span><span class=\"p\">(</span><span class=\"s1\">&#39;%Y-%m-</span><span class=\"si\">%d</span><span class=\"s1\"> %H:%M:%S&#39;</span><span class=\"p\">)</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">)</span>\n\n            <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">status_file</span><span class=\"p\">,</span> <span class=\"s1\">&#39;w&#39;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n                <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dump</span><span class=\"p\">(</span><span class=\"n\">status</span><span class=\"p\">,</span> <span class=\"n\">f</span><span class=\"p\">,</span> <span class=\"n\">indent</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">separators</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s1\">&#39;, &#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;: &#39;</span><span class=\"p\">))</span>\n\n            <span class=\"n\">status_dir</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">fpaths</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">status_file</span><span class=\"p\">],</span> <span class=\"n\">message</span><span class=\"o\">=</span><span class=\"sa\">f</span><span class=\"s1\">&#39;:boom: Model generation fails for </span><span class=\"si\">{</span><span class=\"n\">cycle</span><span class=\"si\">}</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n\n            <span class=\"k\">continue</span> <span class=\"c1\"># restart the loop</span>\n\n        <span class=\"c1\"># Model integration</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">&#39;Starting model integration for </span><span class=\"si\">{</span><span class=\"n\">cycle</span><span class=\"si\">}</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n            <span class=\"n\">ncpu</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">cpu_count</span><span class=\"p\">()</span><span class=\"o\">/</span><span class=\"mi\">2</span>\n            <span class=\"n\">model_exe</span> <span class=\"o\">=</span> <span class=\"n\">executables</span><span class=\"p\">[</span><span class=\"s1\">&#39;schism_WWM_exe&#39;</span><span class=\"p\">]</span>\n            <span class=\"n\">nscribe</span> <span class=\"o\">=</span> <span class=\"mi\">1</span> <span class=\"c1\"># scribed output</span>\n            <span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">check_call</span><span class=\"p\">([</span><span class=\"s1\">&#39;mpirun&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;-np&#39;</span><span class=\"p\">,</span> <span class=\"sa\">f</span><span class=\"s1\">&#39;</span><span class=\"si\">{</span><span class=\"n\">ncpu</span><span class=\"si\">}</span><span class=\"s1\">&#39;</span><span class=\"p\">,</span> <span class=\"n\">model_exe</span><span class=\"p\">,</span> <span class=\"sa\">f</span><span class=\"s1\">&#39;</span><span class=\"si\">{</span><span class=\"n\">nscribe</span><span class=\"si\">}</span><span class=\"s1\">&#39;</span><span class=\"p\">],</span> <span class=\"n\">cwd</span><span class=\"o\">=</span><span class=\"n\">cycle_dir</span><span class=\"o\">.</span><span class=\"n\">fdir</span><span class=\"p\">)</span>\n            <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">&#39;Finished model integration for </span><span class=\"si\">{</span><span class=\"n\">cycle</span><span class=\"si\">}</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n            <span class=\"n\">status</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span>\n                <span class=\"p\">{</span>\n                    <span class=\"s1\">&#39;cycle&#39;</span><span class=\"p\">:</span><span class=\"n\">cycle</span><span class=\"p\">,</span>\n                    <span class=\"s1\">&#39;status&#39;</span><span class=\"p\">:</span><span class=\"s1\">&#39;done&#39;</span><span class=\"p\">,</span>\n                    <span class=\"s1\">&#39;lastupdate&#39;</span><span class=\"p\">:</span><span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">to_datetime</span><span class=\"p\">(</span><span class=\"s1\">&#39;now&#39;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">strftime</span><span class=\"p\">(</span><span class=\"s1\">&#39;%Y-%m-</span><span class=\"si\">%d</span><span class=\"s1\"> %H:%M:%S&#39;</span><span class=\"p\">)</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">)</span>\n\n            <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">status_file</span><span class=\"p\">,</span> <span class=\"s1\">&#39;w&#39;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n                <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dump</span><span class=\"p\">(</span><span class=\"n\">status</span><span class=\"p\">,</span> <span class=\"n\">f</span><span class=\"p\">,</span> <span class=\"n\">indent</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">separators</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s1\">&#39;, &#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;: &#39;</span><span class=\"p\">))</span>\n\n            <span class=\"n\">status_dir</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">fpaths</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">status_file</span><span class=\"p\">],</span> <span class=\"n\">message</span><span class=\"o\">=</span><span class=\"sa\">f</span><span class=\"s1\">&#39;:tada: Model integration done for </span><span class=\"si\">{</span><span class=\"n\">cycle</span><span class=\"si\">}</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n        <span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n            <span class=\"n\">log_file</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">fdir_paths</span><span class=\"p\">[</span><span class=\"s1\">&#39;log_dir&#39;</span><span class=\"p\">],</span> <span class=\"sa\">f</span><span class=\"s1\">&#39;</span><span class=\"si\">{</span><span class=\"n\">cycle</span><span class=\"si\">}</span><span class=\"s1\">.fatal&#39;</span><span class=\"p\">)</span>\n            <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">&#39;Model could not be run for cycle </span><span class=\"si\">{</span><span class=\"n\">cycle</span><span class=\"si\">}</span><span class=\"s1\">. Check </span><span class=\"si\">{</span><span class=\"n\">log_file</span><span class=\"si\">}</span><span class=\"s1\">.&#39;</span><span class=\"p\">)</span>\n            <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">log_file</span><span class=\"p\">,</span> <span class=\"s1\">&#39;w&#39;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n                <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"nb\">repr</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">))</span>\n\n            <span class=\"n\">status</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span>\n                <span class=\"p\">{</span>\n                    <span class=\"s1\">&#39;cycle&#39;</span><span class=\"p\">:</span><span class=\"n\">cycle</span><span class=\"p\">,</span>\n                    <span class=\"s1\">&#39;status&#39;</span><span class=\"p\">:</span><span class=\"s1\">&#39;failed&#39;</span><span class=\"p\">,</span>\n                    <span class=\"s1\">&#39;lastupdate&#39;</span><span class=\"p\">:</span><span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">to_datetime</span><span class=\"p\">(</span><span class=\"s1\">&#39;now&#39;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">strftime</span><span class=\"p\">(</span><span class=\"s1\">&#39;%Y-%m-</span><span class=\"si\">%d</span><span class=\"s1\"> %H:%M:%S&#39;</span><span class=\"p\">)</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">)</span>\n\n            <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">status_file</span><span class=\"p\">,</span> <span class=\"s1\">&#39;w&#39;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n                <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dump</span><span class=\"p\">(</span><span class=\"n\">status</span><span class=\"p\">,</span> <span class=\"n\">f</span><span class=\"p\">,</span> <span class=\"n\">indent</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">separators</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s1\">&#39;, &#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;: &#39;</span><span class=\"p\">))</span>\n\n            <span class=\"n\">status_dir</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">fpaths</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">status_file</span><span class=\"p\">],</span> <span class=\"n\">message</span><span class=\"o\">=</span><span class=\"sa\">f</span><span class=\"s1\">&#39;:boom: Model integration fails for </span><span class=\"si\">{</span><span class=\"n\">cycle</span><span class=\"si\">}</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n            <span class=\"k\">continue</span>\n\n        <span class=\"c1\"># Check if the results (in out2d_1.nc) is created properly</span>\n        <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">&#39;Checking if output is geneared for </span><span class=\"si\">{</span><span class=\"n\">cycle</span><span class=\"si\">}</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n        <span class=\"n\">out_nc</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">cycle_dir</span><span class=\"o\">.</span><span class=\"n\">fdir</span><span class=\"p\">,</span> <span class=\"s1\">&#39;outputs&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;out2d_1.nc&#39;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">out_nc</span><span class=\"p\">):</span>\n            <span class=\"n\">status</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span>\n                <span class=\"p\">{</span>\n                    <span class=\"s1\">&#39;cycle&#39;</span><span class=\"p\">:</span><span class=\"n\">cycle</span><span class=\"p\">,</span>\n                    <span class=\"s1\">&#39;status&#39;</span><span class=\"p\">:</span><span class=\"s1\">&#39;done&#39;</span><span class=\"p\">,</span>\n                    <span class=\"s1\">&#39;lastupdate&#39;</span><span class=\"p\">:</span><span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">to_datetime</span><span class=\"p\">(</span><span class=\"s1\">&#39;now&#39;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">strftime</span><span class=\"p\">(</span><span class=\"s1\">&#39;%Y-%m-</span><span class=\"si\">%d</span><span class=\"s1\"> %H:%M:%S&#39;</span><span class=\"p\">)</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">)</span>\n            <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">status_file</span><span class=\"p\">,</span> <span class=\"s1\">&#39;w&#39;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n                <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dump</span><span class=\"p\">(</span><span class=\"n\">status</span><span class=\"p\">,</span> <span class=\"n\">f</span><span class=\"p\">,</span> <span class=\"n\">indent</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">separators</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s1\">&#39;, &#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;: &#39;</span><span class=\"p\">))</span>\n\n            <span class=\"n\">status_dir</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">fpaths</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">status_file</span><span class=\"p\">],</span> <span class=\"n\">message</span><span class=\"o\">=</span><span class=\"sa\">f</span><span class=\"s1\">&#39;:tada: Model integration done for </span><span class=\"si\">{</span><span class=\"n\">cycle</span><span class=\"si\">}</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n            <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">&#39;Output is generated for </span><span class=\"si\">{</span><span class=\"n\">cycle</span><span class=\"si\">}</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">&#39;Model result is not found for cycle </span><span class=\"si\">{</span><span class=\"n\">cycle</span><span class=\"si\">}</span><span class=\"s1\">. Continuing forecast loop.&#39;</span><span class=\"p\">)</span>\n            <span class=\"n\">status</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span>\n                <span class=\"p\">{</span>\n                    <span class=\"s1\">&#39;cycle&#39;</span><span class=\"p\">:</span><span class=\"n\">cycle</span><span class=\"p\">,</span>\n                    <span class=\"s1\">&#39;status&#39;</span><span class=\"p\">:</span><span class=\"s1\">&#39;failed&#39;</span><span class=\"p\">,</span>\n                    <span class=\"s1\">&#39;lastupdate&#39;</span><span class=\"p\">:</span><span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">to_datetime</span><span class=\"p\">(</span><span class=\"s1\">&#39;now&#39;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">strftime</span><span class=\"p\">(</span><span class=\"s1\">&#39;%Y-%m-</span><span class=\"si\">%d</span><span class=\"s1\"> %H:%M:%S&#39;</span><span class=\"p\">)</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">)</span>\n\n            <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">status_file</span><span class=\"p\">,</span> <span class=\"s1\">&#39;w&#39;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n                <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dump</span><span class=\"p\">(</span><span class=\"n\">status</span><span class=\"p\">,</span> <span class=\"n\">f</span><span class=\"p\">,</span> <span class=\"n\">indent</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">separators</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s1\">&#39;, &#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;: &#39;</span><span class=\"p\">))</span>\n\n            <span class=\"n\">status_dir</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">fpaths</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">status_file</span><span class=\"p\">],</span> <span class=\"n\">message</span><span class=\"o\">=</span><span class=\"sa\">f</span><span class=\"s1\">&#39;:boom: Model integration fails for </span><span class=\"si\">{</span><span class=\"n\">cycle</span><span class=\"si\">}</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n            <span class=\"k\">continue</span>\n\n        <span class=\"c1\"># Post-processing and result upload</span>\n        <span class=\"c1\">## Processing the tiles</span>\n        <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">&#39;Creating output tiles for </span><span class=\"si\">{</span><span class=\"n\">cycle</span><span class=\"si\">}</span><span class=\"s1\">.&#39;</span><span class=\"p\">)</span>\n        <span class=\"n\">values</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mf\">5.1</span><span class=\"p\">,</span> <span class=\"mf\">0.01</span><span class=\"p\">)</span> <span class=\"c1\"># the range of values we want for colorbar</span>\n        <span class=\"n\">colormap</span> <span class=\"o\">=</span> <span class=\"n\">Colormap</span><span class=\"p\">(</span><span class=\"n\">values</span><span class=\"o\">=</span><span class=\"n\">values</span><span class=\"p\">,</span> <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"n\">ccm</span><span class=\"o\">.</span><span class=\"n\">balance</span><span class=\"p\">,</span> <span class=\"n\">midpoint</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n        <span class=\"n\">tiles_extent</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">86</span><span class=\"p\">,</span> <span class=\"mi\">93</span><span class=\"p\">,</span> <span class=\"mf\">20.5</span><span class=\"p\">,</span> <span class=\"mi\">24</span><span class=\"p\">]</span>\n        <span class=\"n\">tiles_resolution</span> <span class=\"o\">=</span> <span class=\"mf\">0.0025</span> <span class=\"c1\"># 250m</span>\n        <span class=\"n\">colorbar_ticks</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mf\">5.1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n\n        <span class=\"n\">output_forecast_dir</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">cycle_dir</span><span class=\"o\">.</span><span class=\"n\">fdir</span><span class=\"p\">,</span> <span class=\"s1\">&#39;forecasts&#39;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">output_forecast_dir</span><span class=\"p\">):</span>\n            <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">mkdir</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">cycle_dir</span><span class=\"o\">.</span><span class=\"n\">fdir</span><span class=\"p\">,</span> <span class=\"s1\">&#39;forecasts&#39;</span><span class=\"p\">))</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">cycle_dir</span><span class=\"o\">.</span><span class=\"n\">fdir</span><span class=\"p\">,</span> <span class=\"s1\">&#39;forecasts&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;elev&#39;</span><span class=\"p\">))):</span>\n            <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">mkdir</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">cycle_dir</span><span class=\"o\">.</span><span class=\"n\">fdir</span><span class=\"p\">,</span> <span class=\"s1\">&#39;forecasts&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;elev&#39;</span><span class=\"p\">))</span>\n        <span class=\"n\">out_tiles</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">cycle_dir</span><span class=\"o\">.</span><span class=\"n\">fdir</span><span class=\"p\">,</span> <span class=\"s1\">&#39;forecasts&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;elev&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;tiles&#39;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">out_tiles</span><span class=\"p\">):</span>\n            <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">mkdir</span><span class=\"p\">(</span><span class=\"n\">out_tiles</span><span class=\"p\">)</span>\n        <span class=\"n\">tiles</span> <span class=\"o\">=</span> <span class=\"n\">create_water_level_tiles</span><span class=\"p\">(</span>\n            <span class=\"n\">out_nc</span><span class=\"o\">=</span><span class=\"n\">out_nc</span><span class=\"p\">,</span> \n            <span class=\"n\">outdir</span><span class=\"o\">=</span><span class=\"n\">out_tiles</span><span class=\"p\">,</span> \n            <span class=\"n\">colormap</span><span class=\"o\">=</span><span class=\"n\">colormap</span><span class=\"p\">,</span> \n            <span class=\"n\">extent</span><span class=\"o\">=</span><span class=\"n\">tiles_extent</span><span class=\"p\">,</span>\n            <span class=\"n\">resolution</span><span class=\"o\">=</span><span class=\"n\">tiles_resolution</span><span class=\"p\">)</span>\n        <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">&#39;Output tiles are generated for </span><span class=\"si\">{</span><span class=\"n\">cycle</span><span class=\"si\">}</span><span class=\"s1\">.&#39;</span><span class=\"p\">)</span>\n\n        <span class=\"c1\">## Creating colorbar</span>\n        <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">&#39;Generating colorbar for output tiles for </span><span class=\"si\">{</span><span class=\"n\">cycle</span><span class=\"si\">}</span><span class=\"s1\">.&#39;</span><span class=\"p\">)</span>\n        <span class=\"n\">fig</span><span class=\"p\">,</span> <span class=\"n\">ax</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">subplots</span><span class=\"p\">(</span><span class=\"n\">figsize</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"mf\">2.5</span><span class=\"p\">),</span> <span class=\"n\">facecolor</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n        <span class=\"n\">norm</span> <span class=\"o\">=</span> <span class=\"n\">mcolors</span><span class=\"o\">.</span><span class=\"n\">TwoSlopeNorm</span><span class=\"p\">(</span><span class=\"n\">vmin</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">min</span><span class=\"p\">(</span><span class=\"n\">values</span><span class=\"p\">),</span> <span class=\"n\">vcenter</span><span class=\"o\">=</span><span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"n\">vmax</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">max</span><span class=\"p\">(</span><span class=\"n\">values</span><span class=\"p\">))</span>\n        <span class=\"n\">sc</span> <span class=\"o\">=</span> <span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">scatter</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randn</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">values</span><span class=\"p\">)),</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randn</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">values</span><span class=\"p\">)),</span> <span class=\"n\">c</span><span class=\"o\">=</span><span class=\"n\">values</span><span class=\"p\">,</span> <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"n\">ccm</span><span class=\"o\">.</span><span class=\"n\">balance</span><span class=\"p\">,</span> <span class=\"n\">norm</span><span class=\"o\">=</span><span class=\"n\">norm</span><span class=\"p\">)</span>\n        <span class=\"n\">divider</span> <span class=\"o\">=</span> <span class=\"n\">make_axes_locatable</span><span class=\"p\">(</span><span class=\"n\">ax</span><span class=\"p\">)</span>\n        <span class=\"n\">cax</span> <span class=\"o\">=</span> <span class=\"n\">divider</span><span class=\"o\">.</span><span class=\"n\">append_axes</span><span class=\"p\">(</span><span class=\"n\">position</span><span class=\"o\">=</span><span class=\"s1\">&#39;right&#39;</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"s1\">&#39;50%&#39;</span><span class=\"p\">)</span>\n        <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">colorbar</span><span class=\"p\">(</span><span class=\"n\">sc</span><span class=\"p\">,</span> <span class=\"n\">cax</span><span class=\"o\">=</span><span class=\"n\">cax</span><span class=\"p\">,</span> <span class=\"n\">orientation</span><span class=\"o\">=</span><span class=\"s1\">&#39;vertical&#39;</span><span class=\"p\">,</span> <span class=\"n\">extend</span><span class=\"o\">=</span><span class=\"s1\">&#39;both&#39;</span><span class=\"p\">)</span>\n        <span class=\"n\">cax</span><span class=\"o\">.</span><span class=\"n\">set_yticks</span><span class=\"p\">(</span><span class=\"n\">colorbar_ticks</span><span class=\"p\">)</span>\n        <span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">set_visible</span><span class=\"p\">(</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n        <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">savefig</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">out_tiles</span><span class=\"p\">,</span> <span class=\"s1\">&#39;colorbar.png&#39;</span><span class=\"p\">),</span> <span class=\"n\">dpi</span><span class=\"o\">=</span><span class=\"mi\">150</span><span class=\"p\">,</span> <span class=\"n\">bbox_inches</span><span class=\"o\">=</span><span class=\"s1\">&#39;tight&#39;</span><span class=\"p\">)</span>\n        <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n        <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">&#39;Colorbar is generated for </span><span class=\"si\">{</span><span class=\"n\">cycle</span><span class=\"si\">}</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n\n        <span class=\"c1\">## Creating stations</span>\n        <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">&#39;Creating station output for </span><span class=\"si\">{</span><span class=\"n\">cycle</span><span class=\"si\">}</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n        <span class=\"n\">out_station</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">cycle_dir</span><span class=\"o\">.</span><span class=\"n\">fdir</span><span class=\"p\">,</span> <span class=\"s1\">&#39;forecasts&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;elev&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;stations&#39;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">out_station</span><span class=\"p\">):</span>\n            <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">mkdir</span><span class=\"p\">(</span><span class=\"n\">out_station</span><span class=\"p\">)</span>\n        <span class=\"n\">stations</span> <span class=\"o\">=</span> <span class=\"n\">create_water_level_stations</span><span class=\"p\">(</span>\n            <span class=\"n\">out_nc</span><span class=\"o\">=</span><span class=\"n\">out_nc</span><span class=\"p\">,</span> \n            <span class=\"n\">outdir</span><span class=\"o\">=</span><span class=\"n\">out_station</span><span class=\"p\">,</span> \n            <span class=\"n\">station_in</span><span class=\"o\">=</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">cycle_dir</span><span class=\"o\">.</span><span class=\"n\">fdir</span><span class=\"p\">,</span> <span class=\"s1\">&#39;station.in&#39;</span><span class=\"p\">)</span>\n            <span class=\"p\">)</span>\n        <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">&#39;Station output is created for </span><span class=\"si\">{</span><span class=\"n\">cycle</span><span class=\"si\">}</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n\n        <span class=\"c1\">## Creating manifest</span>\n        <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">&#39;Starting manifest creation for </span><span class=\"si\">{</span><span class=\"n\">cycle</span><span class=\"si\">}</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n        <span class=\"n\">manifest</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;cycle&quot;</span><span class=\"p\">:</span><span class=\"n\">cycle</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;date&quot;</span><span class=\"p\">:</span><span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">to_datetime</span><span class=\"p\">(</span><span class=\"n\">cycle</span><span class=\"p\">,</span> <span class=\"nb\">format</span><span class=\"o\">=</span><span class=\"s2\">&quot;%Y%m</span><span class=\"si\">%d</span><span class=\"s2\">%H&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">strftime</span><span class=\"p\">(</span><span class=\"s1\">&#39;%Y-%m-</span><span class=\"si\">%d</span><span class=\"s1\"> %H:%M:%S&#39;</span><span class=\"p\">),</span>\n            <span class=\"s2\">&quot;lastupdate&quot;</span><span class=\"p\">:</span><span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">to_datetime</span><span class=\"p\">(</span><span class=\"s1\">&#39;now&#39;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">strftime</span><span class=\"p\">(</span><span class=\"s1\">&#39;%Y-%m-</span><span class=\"si\">%d</span><span class=\"s1\"> %H:%M:%S&#39;</span><span class=\"p\">),</span>\n            <span class=\"s2\">&quot;producer&quot;</span><span class=\"p\">:</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"s1\">&#39;PRODUCER&#39;</span><span class=\"p\">],</span>\n            <span class=\"s2\">&quot;version&quot;</span><span class=\"p\">:</span><span class=\"n\">__version__</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;forecasts&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;elev&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                    <span class=\"s2\">&quot;name&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;Water level&quot;</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;src&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;forecasts/elev&quot;</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;layers&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                        <span class=\"p\">{</span>\n                            <span class=\"s2\">&quot;name&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;Map&quot;</span><span class=\"p\">,</span>\n                            <span class=\"s2\">&quot;type&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;tiles&quot;</span><span class=\"p\">,</span>\n                            <span class=\"s2\">&quot;timeseries&quot;</span><span class=\"p\">:</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                            <span class=\"s2\">&quot;colorbar&quot;</span><span class=\"p\">:</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                            <span class=\"s2\">&quot;colorbar_file&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;colorbar.png&quot;</span><span class=\"p\">,</span>\n                            <span class=\"s2\">&quot;colorscale&quot;</span><span class=\"p\">:</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n                            <span class=\"s2\">&quot;timestamps&quot;</span><span class=\"p\">:</span><span class=\"n\">tiles</span>\n                        <span class=\"p\">},</span>\n                        <span class=\"p\">{</span>\n                            <span class=\"s2\">&quot;name&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;Water level&quot;</span><span class=\"p\">,</span>\n                            <span class=\"s2\">&quot;type&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;stations&quot;</span><span class=\"p\">,</span>\n                            <span class=\"s2\">&quot;stations&quot;</span><span class=\"p\">:</span><span class=\"n\">stations</span>\n                        <span class=\"p\">}</span>\n                    <span class=\"p\">]</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"n\">output_manifest_file</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">cycle_dir</span><span class=\"o\">.</span><span class=\"n\">fdir</span><span class=\"p\">,</span> <span class=\"s1\">&#39;manifest.json&#39;</span><span class=\"p\">)</span>\n        <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">output_manifest_file</span><span class=\"p\">,</span> <span class=\"s1\">&#39;w&#39;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n            <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dump</span><span class=\"p\">(</span><span class=\"n\">manifest</span><span class=\"p\">,</span> <span class=\"n\">f</span><span class=\"p\">,</span> <span class=\"n\">indent</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">separators</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s1\">&#39;, &#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;: &#39;</span><span class=\"p\">))</span>\n\n        <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">&#39;Manifest is created for </span><span class=\"si\">{</span><span class=\"n\">cycle</span><span class=\"si\">}</span><span class=\"s1\">.&#39;</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Uploading the forecast</span>\n        <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">&#39;Publishing the results for </span><span class=\"si\">{</span><span class=\"n\">cycle</span><span class=\"si\">}</span><span class=\"s1\">.&#39;</span><span class=\"p\">)</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">cycle_dir</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span>\n                <span class=\"n\">fpaths</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">output_forecast_dir</span><span class=\"p\">,</span> <span class=\"n\">output_manifest_file</span><span class=\"p\">],</span> \n                <span class=\"n\">message</span><span class=\"o\">=</span><span class=\"sa\">f</span><span class=\"s1\">&#39;:rocket: Forecast published for </span><span class=\"si\">{</span><span class=\"n\">cycle</span><span class=\"si\">}</span><span class=\"s1\">&#39;</span>\n            <span class=\"p\">)</span>\n\n            <span class=\"n\">status</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span>\n                <span class=\"p\">{</span>\n                    <span class=\"s1\">&#39;cycle&#39;</span><span class=\"p\">:</span><span class=\"n\">cycle</span><span class=\"p\">,</span>\n                    <span class=\"s1\">&#39;status&#39;</span><span class=\"p\">:</span><span class=\"s1\">&#39;published&#39;</span><span class=\"p\">,</span>\n                    <span class=\"s1\">&#39;lastforecast&#39;</span><span class=\"p\">:{</span>\n                        <span class=\"s1\">&#39;date&#39;</span><span class=\"p\">:</span><span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">to_datetime</span><span class=\"p\">(</span><span class=\"n\">cycle</span><span class=\"p\">,</span> <span class=\"nb\">format</span><span class=\"o\">=</span><span class=\"s2\">&quot;%Y%m</span><span class=\"si\">%d</span><span class=\"s2\">%H&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">strftime</span><span class=\"p\">(</span><span class=\"s1\">&#39;%Y-%m-</span><span class=\"si\">%d</span><span class=\"s1\">&#39;</span><span class=\"p\">),</span>\n                        <span class=\"s1\">&#39;cycle&#39;</span><span class=\"p\">:</span><span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">to_datetime</span><span class=\"p\">(</span><span class=\"n\">cycle</span><span class=\"p\">,</span> <span class=\"nb\">format</span><span class=\"o\">=</span><span class=\"s2\">&quot;%Y%m</span><span class=\"si\">%d</span><span class=\"s2\">%H&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">strftime</span><span class=\"p\">(</span><span class=\"s1\">&#39;%H&#39;</span><span class=\"p\">)</span>\n                    <span class=\"p\">},</span>\n                    <span class=\"s1\">&#39;lastupdate&#39;</span><span class=\"p\">:</span><span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">to_datetime</span><span class=\"p\">(</span><span class=\"s1\">&#39;now&#39;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">strftime</span><span class=\"p\">(</span><span class=\"s1\">&#39;%Y-%m-</span><span class=\"si\">%d</span><span class=\"s1\"> %H:%M:%S&#39;</span><span class=\"p\">)</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">)</span>\n            <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">status_file</span><span class=\"p\">,</span> <span class=\"s1\">&#39;w&#39;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n                <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dump</span><span class=\"p\">(</span><span class=\"n\">status</span><span class=\"p\">,</span> <span class=\"n\">f</span><span class=\"p\">,</span> <span class=\"n\">indent</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">separators</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s1\">&#39;, &#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;: &#39;</span><span class=\"p\">))</span>\n\n            <span class=\"n\">status_dir</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">fpaths</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">status_file</span><span class=\"p\">],</span> <span class=\"n\">message</span><span class=\"o\">=</span><span class=\"sa\">f</span><span class=\"s1\">&#39;:rocket: Forecast published for </span><span class=\"si\">{</span><span class=\"n\">cycle</span><span class=\"si\">}</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">&#39;Problem with publishing for cycle </span><span class=\"si\">{</span><span class=\"n\">cycle</span><span class=\"si\">}</span><span class=\"s1\">. Continuing forecast loop.&#39;</span><span class=\"p\">)</span>\n            <span class=\"n\">status</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span>\n                <span class=\"p\">{</span>\n                    <span class=\"s1\">&#39;cycle&#39;</span><span class=\"p\">:</span><span class=\"n\">cycle</span><span class=\"p\">,</span>\n                    <span class=\"s1\">&#39;status&#39;</span><span class=\"p\">:</span><span class=\"s1\">&#39;failed&#39;</span><span class=\"p\">,</span>\n                    <span class=\"s1\">&#39;lastupdate&#39;</span><span class=\"p\">:</span><span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">to_datetime</span><span class=\"p\">(</span><span class=\"s1\">&#39;now&#39;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">strftime</span><span class=\"p\">(</span><span class=\"s1\">&#39;%Y-%m-</span><span class=\"si\">%d</span><span class=\"s1\"> %H:%M:%S&#39;</span><span class=\"p\">)</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">)</span>\n\n            <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">status_file</span><span class=\"p\">,</span> <span class=\"s1\">&#39;w&#39;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n                <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dump</span><span class=\"p\">(</span><span class=\"n\">status</span><span class=\"p\">,</span> <span class=\"n\">f</span><span class=\"p\">,</span> <span class=\"n\">indent</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">separators</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s1\">&#39;, &#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;: &#39;</span><span class=\"p\">))</span>\n\n            <span class=\"n\">status_dir</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">fpaths</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">status_file</span><span class=\"p\">],</span> <span class=\"n\">message</span><span class=\"o\">=</span><span class=\"sa\">f</span><span class=\"s1\">&#39;:boom: Problem with publishing for </span><span class=\"si\">{</span><span class=\"n\">cycle</span><span class=\"si\">}</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n            <span class=\"k\">continue</span>\n\n        <span class=\"c1\"># forecast loop continues from the top again</span>\n</code></pre>\n</div>\n"}, {"fullname": "bandsos.color", "modulename": "bandsos.color", "type": "module", "doc": "<p>The color module provides class to generate colormap, export to colorfile necessary for gdal transformation used in \n<a href=\"post.html\">post</a> module.</p>\n"}, {"fullname": "bandsos.color.Colormap", "modulename": "bandsos.color", "qualname": "Colormap", "type": "class", "doc": "<p></p>\n"}, {"fullname": "bandsos.color.Colormap.__init__", "modulename": "bandsos.color", "qualname": "Colormap.__init__", "type": "function", "doc": "<p>Create an instance of Colormap object for given <code>values</code>, for <code>cmap</code> colormap, with <code>vmin</code>, <code>vmax</code>, and <code>midpoint</code>.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">values</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">cmap</span><span class=\"p\">:</span> <span class=\"n\">matplotlib</span><span class=\"o\">.</span><span class=\"n\">colors</span><span class=\"o\">.</span><span class=\"n\">LinearSegmentedColormap</span>,</span><span class=\"param\">\t<span class=\"n\">vmin</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">vmax</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">midpoint</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "bandsos.color.Colormap.norm", "modulename": "bandsos.color", "qualname": "Colormap.norm", "type": "variable", "doc": "<p>Gives the normalized values for the given <code>values</code>.</p>\n"}, {"fullname": "bandsos.color.Colormap.norm_8bit", "modulename": "bandsos.color", "qualname": "Colormap.norm_8bit", "type": "variable", "doc": "<p>Gives the 8-bit integer (0-254) values for the given <code>values</code>.</p>\n"}, {"fullname": "bandsos.color.Colormap.rgb", "modulename": "bandsos.color", "qualname": "Colormap.rgb", "type": "variable", "doc": "<p>Gives the rgba for the given <code>values</code>.</p>\n"}, {"fullname": "bandsos.color.Colormap.rgb_8bit", "modulename": "bandsos.color", "qualname": "Colormap.rgb_8bit", "type": "variable", "doc": "<p>Gives the 8-bit rgba for the given <code>values</code>.</p>\n"}, {"fullname": "bandsos.color.Colormap.hex", "modulename": "bandsos.color", "qualname": "Colormap.hex", "type": "variable", "doc": "<p>Gives the hex represetation of the colorbar for the given <code>values</code>.</p>\n"}, {"fullname": "bandsos.color.Colormap.normalize", "modulename": "bandsos.color", "qualname": "Colormap.normalize", "type": "function", "doc": "<p>Normalize between 0 to 255, with mid point.</p>\n\n<p>Output needs to be rounded and astype(int) for using with colormaps (LinearSagmentedColormaps)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">values</span>, </span><span class=\"param\"><span class=\"n\">vmin</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">vmax</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">midpoint</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "bandsos.color.Colormap.plot", "modulename": "bandsos.color", "qualname": "Colormap.plot", "type": "function", "doc": "<p>Returns a plot with sagmented colors, their values, and hex codes.</p>\n\n<div class=\"pdoc-alert pdoc-alert-warning\">\n\n<p>If the len(values) is too large, the text will overlap, and might render unreadable. This function is now\nfor testing purpose.</p>\n\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "bandsos.color.Colormap.to_colorfile", "modulename": "bandsos.color", "qualname": "Colormap.to_colorfile", "type": "function", "doc": "<p>Store the color sagmentation as a gdal-complient colorfile. If <code>novalue</code> is true, a no-value line is added to\nthe end of the color definition.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">fname</span>, </span><span class=\"param\"><span class=\"n\">novalue</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "bandsos.color.Colormap.to_dict", "modulename": "bandsos.color", "qualname": "Colormap.to_dict", "type": "function", "doc": "<p>Return as dictionary of rgb and hex color code, for each value in the provided values (see Colormap initialization above).\nThe output of this method is particularly useful if you want to include it into a manifest file.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "bandsos.gfs", "modulename": "bandsos.gfs", "type": "module", "doc": "<p>This module provides functionalities to sort and combine already downloaded GFS forecasts into a single netCDF file. This\nfunctionality is particularly useful when unique sagments from previous gfs forecasts are needed to be combined together\nto get a continuous sflux file.</p>\n\n<div class=\"pdoc-alert pdoc-alert-warning\">\n\n<p>This module does not provides any classes currently and the the functions in this modules are standalone.  As the \nfunctionalities are not yet formalized into a data class. However, in future version this functions might be \ndepricated and marged into a data class.</p>\n\n</div>\n"}, {"fullname": "bandsos.gfs.list_gfs_cycles", "modulename": "bandsos.gfs", "qualname": "list_gfs_cycles", "type": "function", "doc": "<p>List available GFS forecast cycles in the <code>fdir</code> location with <code>fname_pattern</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fdir</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">fname_pattern</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;gfs*.nc&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, {"fullname": "bandsos.gfs.select_gfs_cycles", "modulename": "bandsos.gfs", "qualname": "select_gfs_cycles", "type": "function", "doc": "<p>Selects appropriate cycles from <code>cycles</code> with <code>start_date</code> and <code>end_date</code>. \n<code>forecast_length</code> controls how much of the forecast to be considered in the last cycle.\n<code>cycle_step</code> controls how the function search for each previous or later forecasts step by step.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">cycles</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>,</span><span class=\"param\">\t<span class=\"n\">start_date</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">_libs</span><span class=\"o\">.</span><span class=\"n\">tslibs</span><span class=\"o\">.</span><span class=\"n\">timestamps</span><span class=\"o\">.</span><span class=\"n\">Timestamp</span>,</span><span class=\"param\">\t<span class=\"n\">end_date</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">_libs</span><span class=\"o\">.</span><span class=\"n\">tslibs</span><span class=\"o\">.</span><span class=\"n\">timestamps</span><span class=\"o\">.</span><span class=\"n\">Timestamp</span>,</span><span class=\"param\">\t<span class=\"n\">forecast_length</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">_libs</span><span class=\"o\">.</span><span class=\"n\">tslibs</span><span class=\"o\">.</span><span class=\"n\">timedeltas</span><span class=\"o\">.</span><span class=\"n\">Timedelta</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;5D&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">cycle_step</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">_libs</span><span class=\"o\">.</span><span class=\"n\">tslibs</span><span class=\"o\">.</span><span class=\"n\">timedeltas</span><span class=\"o\">.</span><span class=\"n\">Timedelta</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;6H&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, {"fullname": "bandsos.gfs.combine_gfs_cycles", "modulename": "bandsos.gfs", "qualname": "combine_gfs_cycles", "type": "function", "doc": "<p>Combining gfs dataset from a list of <code>cycles</code>, and save to <code>fname</code>.</p>\n\n<p>Cycles - should have index(cycle name), fpath, start_date</p>\n\n<p>This method generates temporary files in system temporary folder and cleans them up upon completion or failure.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">cycles</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>, </span><span class=\"param\"><span class=\"n\">fname</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "bandsos.gfs.create_gfs_data", "modulename": "bandsos.gfs", "qualname": "create_gfs_data", "type": "function", "doc": "<p>Create gfs data to cover from <code>start_date</code> to <code>end_date</code>, with allowed <code>forecast_length</code> for each cycles found in \n<code>fdir</code> with filenames matching <code>fname_pattern</code> and save it to <code>fname_out</code>. <code>cycle_step</code> controls how the algorithm\nsearch for next/previous cycle if exact cycle is not found.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">start_date</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">_libs</span><span class=\"o\">.</span><span class=\"n\">tslibs</span><span class=\"o\">.</span><span class=\"n\">timestamps</span><span class=\"o\">.</span><span class=\"n\">Timestamp</span>,</span><span class=\"param\">\t<span class=\"n\">end_date</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">_libs</span><span class=\"o\">.</span><span class=\"n\">tslibs</span><span class=\"o\">.</span><span class=\"n\">timestamps</span><span class=\"o\">.</span><span class=\"n\">Timestamp</span>,</span><span class=\"param\">\t<span class=\"n\">forecast_length</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">_libs</span><span class=\"o\">.</span><span class=\"n\">tslibs</span><span class=\"o\">.</span><span class=\"n\">timedeltas</span><span class=\"o\">.</span><span class=\"n\">Timedelta</span>,</span><span class=\"param\">\t<span class=\"n\">cycle_step</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">_libs</span><span class=\"o\">.</span><span class=\"n\">tslibs</span><span class=\"o\">.</span><span class=\"n\">timedeltas</span><span class=\"o\">.</span><span class=\"n\">Timedelta</span>,</span><span class=\"param\">\t<span class=\"n\">fdir</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">fname_pattern</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">fname_out</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "bandsos.post", "modulename": "bandsos.post", "type": "module", "doc": "<p></p>\n"}, {"fullname": "bandsos.post.create_water_level_tiles", "modulename": "bandsos.post", "qualname": "create_water_level_tiles", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">out_nc</span>,</span><span class=\"param\">\t<span class=\"n\">outdir</span>,</span><span class=\"param\">\t<span class=\"n\">colormap</span>,</span><span class=\"param\">\t<span class=\"n\">extent</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">86</span><span class=\"p\">,</span> <span class=\"mi\">93</span><span class=\"p\">,</span> <span class=\"mf\">20.5</span><span class=\"p\">,</span> <span class=\"mi\">24</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">resolution</span><span class=\"o\">=</span><span class=\"mf\">0.0025</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "bandsos.post.create_water_level_stations", "modulename": "bandsos.post", "qualname": "create_water_level_stations", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">out_nc</span>, </span><span class=\"param\"><span class=\"n\">outdir</span>, </span><span class=\"param\"><span class=\"n\">station_in</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "bandsos.schism", "modulename": "bandsos.schism", "type": "module", "doc": "<p></p>\n"}, {"fullname": "bandsos.schism.Gr3", "modulename": "bandsos.schism", "qualname": "Gr3", "type": "class", "doc": "<p></p>\n"}, {"fullname": "bandsos.schism.Gr3.__init__", "modulename": "bandsos.schism", "qualname": "Gr3.__init__", "type": "function", "doc": "<p>Gr3 data object.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">nodes</span><span class=\"o\">=</span><span class=\"p\">[]</span>, </span><span class=\"param\"><span class=\"n\">elems</span><span class=\"o\">=</span><span class=\"p\">[]</span>, </span><span class=\"param\"><span class=\"n\">data</span><span class=\"o\">=</span><span class=\"p\">[]</span>, </span><span class=\"param\"><span class=\"n\">epsg</span><span class=\"o\">=</span><span class=\"mi\">4326</span></span>)</span>"}, {"fullname": "bandsos.schism.Gr3.read", "modulename": "bandsos.schism", "qualname": "Gr3.read", "type": "function", "doc": "<p>Calling the gr3 object to read the data directly.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">fname</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "bandsos.schism.Gr3.logical_and", "modulename": "bandsos.schism", "qualname": "Gr3.logical_and", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">other</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "bandsos.schism.Gr3.logical_or", "modulename": "bandsos.schism", "qualname": "Gr3.logical_or", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">other</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "bandsos.schism.Gr3.where", "modulename": "bandsos.schism", "qualname": "Gr3.where", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">cond</span>, </span><span class=\"param\"><span class=\"n\">other</span><span class=\"o\">=</span><span class=\"n\">nan</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "bandsos.schism.Gr3.inside", "modulename": "bandsos.schism", "qualname": "Gr3.inside", "type": "function", "doc": "<p>Return a true false grid indicating if it is inside the bbox. </p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>bbox : np.array, list of 4\n    List of 4 indicating the bounding box [West, East, South, North]</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Gr3</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">bbox</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "bandsos.schism.Gr3.nearest", "modulename": "bandsos.schism", "qualname": "Gr3.nearest", "type": "function", "doc": "<p>Return the nearest node and associated info of the point of</p>\n\n<p>of: (x, y) or an array of (x, y)</p>\n\n<p>returns nearest node number, distance to it</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">of</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "bandsos.schism.Gr3.plot", "modulename": "bandsos.schism", "qualname": "Gr3.plot", "type": "function", "doc": "<p>plot data</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">ax</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">clevels</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">colorbar</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">subplot_kw</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">gridspec_kw</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">fig_kw</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "bandsos.schism.Gr3.interpolate", "modulename": "bandsos.schism", "qualname": "Gr3.interpolate", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">at</span>, </span><span class=\"param\"><span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s1\">&#39;linear&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "bandsos.schism.Gr3.to_xarray", "modulename": "bandsos.schism", "qualname": "Gr3.to_xarray", "type": "function", "doc": "<p>Return an xarray dataset</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "bandsos.schism.Gr3.to_netcdf", "modulename": "bandsos.schism", "qualname": "Gr3.to_netcdf", "type": "function", "doc": "<p>Save Gr3 data as netcdf file.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">fname</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "bandsos.schism.Gr3.save", "modulename": "bandsos.schism", "qualname": "Gr3.save", "type": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>fname : string\n    File name of the output file</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>None.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">fname</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "bandsos.schism.Grid", "modulename": "bandsos.schism", "qualname": "Grid", "type": "class", "doc": "<p></p>\n"}, {"fullname": "bandsos.schism.Grid.__init__", "modulename": "bandsos.schism", "qualname": "Grid.__init__", "type": "function", "doc": "<p>Grid object to generate grid and provides function to find various\nvalues at grid points.</p>\n\n<p>x: number of rows\ny: number of columns\ndata: must be of the length len(x)*len(y). It will be flatten to get\ni,j,n formation</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"n\">data</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, {"fullname": "bandsos.schism.Grid.reshape", "modulename": "bandsos.schism", "qualname": "Grid.reshape", "type": "function", "doc": "<p>Reshape the data to conform data structure.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "bandsos.schism.Grid.apply", "modulename": "bandsos.schism", "qualname": "Grid.apply", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">func</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "bandsos.schism.Grid.polar_coordinate", "modulename": "bandsos.schism", "qualname": "Grid.polar_coordinate", "type": "function", "doc": "<p>Calculate the polar distance from a given point of interest.</p>\n\n<p>For lon,lat values, the distance is calculated using great circle distance.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">origin</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "bandsos.schism.Grid.interpolate", "modulename": "bandsos.schism", "qualname": "Grid.interpolate", "type": "function", "doc": "<p>Interpolate at another x,y point or grid using scipy.interpolate.griddata</p>\n\n<p>at: {list, tuple, Grid} instance\ndepth: depth of grid data to interpolate\nmethod: {'linear', 'nearest', 'cubic'}, optional\nfill_value: value used to fill in for requested point outside of convex hull\nrescale: rescale points to unit cube before preforming interpolation</p>\n\n<p>return Grid</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">at</span>, </span><span class=\"param\"><span class=\"n\">depth</span><span class=\"o\">=</span><span class=\"mi\">0</span>, </span><span class=\"param\"><span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s1\">&#39;linear&#39;</span>, </span><span class=\"param\"><span class=\"n\">fill_value</span><span class=\"o\">=</span><span class=\"n\">nan</span>, </span><span class=\"param\"><span class=\"n\">rescale</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "bandsos.schism.Sflux", "modulename": "bandsos.schism", "qualname": "Sflux", "type": "class", "doc": "<p></p>\n"}, {"fullname": "bandsos.schism.Sflux.__init__", "modulename": "bandsos.schism", "qualname": "Sflux.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">grid</span>,</span><span class=\"param\">\t<span class=\"n\">basedate</span>,</span><span class=\"param\">\t<span class=\"n\">sflux_type</span><span class=\"o\">=</span><span class=\"s1\">&#39;air&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">nstep</span><span class=\"o\">=</span><span class=\"mi\">96</span>,</span><span class=\"param\">\t<span class=\"n\">priority</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">syncstep</span><span class=\"o\">=</span><span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">path</span><span class=\"o\">=</span><span class=\"s1\">&#39;./sflux&#39;</span></span>)</span>"}, {"fullname": "bandsos.schism.Sflux.create_netcdf_air", "modulename": "bandsos.schism", "qualname": "Sflux.create_netcdf_air", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "bandsos.schism.Sflux.put_value_air", "modulename": "bandsos.schism", "qualname": "Sflux.put_value_air", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">stepi</span>, </span><span class=\"param\"><span class=\"n\">at</span>, </span><span class=\"param\"><span class=\"n\">flux</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "bandsos.schism.Sflux.create_netcdf_prc", "modulename": "bandsos.schism", "qualname": "Sflux.create_netcdf_prc", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "bandsos.schism.Sflux.put_value_prc", "modulename": "bandsos.schism", "qualname": "Sflux.put_value_prc", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "bandsos.schism.Sflux.create_netcdf_rad", "modulename": "bandsos.schism", "qualname": "Sflux.create_netcdf_rad", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "bandsos.schism.Sflux.put_value_rad", "modulename": "bandsos.schism", "qualname": "Sflux.put_value_rad", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "bandsos.schism.Sflux.close_netcdf", "modulename": "bandsos.schism", "qualname": "Sflux.close_netcdf", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "bandsos.schism.Sflux.write", "modulename": "bandsos.schism", "qualname": "Sflux.write", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">at</span>, </span><span class=\"param\"><span class=\"n\">flux</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "bandsos.schism.Sflux.finish", "modulename": "bandsos.schism", "qualname": "Sflux.finish", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "bandsos.schism.Sflux.sfluxtxt", "modulename": "bandsos.schism", "qualname": "Sflux.sfluxtxt", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">dt</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "bandsos.schism.Bctides", "modulename": "bandsos.schism", "qualname": "Bctides", "type": "class", "doc": "<p></p>\n"}, {"fullname": "bandsos.schism.Bctides.__init__", "modulename": "bandsos.schism", "qualname": "Bctides.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">info</span><span class=\"o\">=</span><span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">ntip</span><span class=\"o\">=</span><span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">tip_dp</span><span class=\"o\">=</span><span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">tip</span><span class=\"o\">=</span><span class=\"p\">[]</span>,</span><span class=\"param\">\t<span class=\"n\">nbfr</span><span class=\"o\">=</span><span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">bfr</span><span class=\"o\">=</span><span class=\"p\">[]</span>,</span><span class=\"param\">\t<span class=\"n\">nope</span><span class=\"o\">=</span><span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">boundaries</span><span class=\"o\">=</span><span class=\"p\">[]</span></span>)</span>"}, {"fullname": "bandsos.schism.Bctides.read", "modulename": "bandsos.schism", "qualname": "Bctides.read", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">filepath</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "bandsos.schism.Bctides.update", "modulename": "bandsos.schism", "qualname": "Bctides.update", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">tidefac</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "bandsos.schism.Bctides.updatesa", "modulename": "bandsos.schism", "qualname": "Bctides.updatesa", "type": "function", "doc": "<p>The earth-equilibrium-argument represents phase of the current positon. Thus if an\nannual cycle needs to implemented in a run starting from the december, the equilibrium\nargument of the value would be omega<em>time\nThe water level would be A</em>cos(omega*t + eq. arg - phase)</p>\n\n<p>Input:\n    tidefac: instance of tidefac object</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">tidefac</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "bandsos.schism.Bctides.write", "modulename": "bandsos.schism", "qualname": "Bctides.write", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">filepath</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "bandsos.schism.Tidefacout", "modulename": "bandsos.schism", "qualname": "Tidefacout", "type": "class", "doc": "<p></p>\n"}, {"fullname": "bandsos.schism.Tidefacout.__init__", "modulename": "bandsos.schism", "qualname": "Tidefacout.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">year</span><span class=\"o\">=</span><span class=\"mi\">0</span>, </span><span class=\"param\"><span class=\"n\">month</span><span class=\"o\">=</span><span class=\"mi\">0</span>, </span><span class=\"param\"><span class=\"n\">day</span><span class=\"o\">=</span><span class=\"mi\">0</span>, </span><span class=\"param\"><span class=\"n\">hour</span><span class=\"o\">=</span><span class=\"mi\">0</span>, </span><span class=\"param\"><span class=\"n\">rnday</span><span class=\"o\">=</span><span class=\"mi\">0</span>, </span><span class=\"param\"><span class=\"n\">const</span><span class=\"o\">=</span><span class=\"p\">{}</span></span>)</span>"}, {"fullname": "bandsos.schism.Tidefacout.read", "modulename": "bandsos.schism", "qualname": "Tidefacout.read", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">filepath</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "bandsos.webdata", "modulename": "bandsos.webdata", "type": "module", "doc": "<p></p>\n"}, {"fullname": "bandsos.webdata.GFS_0p25_1hr", "modulename": "bandsos.webdata", "qualname": "GFS_0p25_1hr", "type": "class", "doc": "<p></p>\n"}, {"fullname": "bandsos.webdata.GFS_0p25_1hr.__init__", "modulename": "bandsos.webdata", "qualname": "GFS_0p25_1hr.__init__", "type": "function", "doc": "<p>Checking and downloading new data from web for gfs dataset.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">data_dir</span><span class=\"o\">=</span><span class=\"s1\">&#39;./gfs&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">data_prefix</span><span class=\"o\">=</span><span class=\"s1\">&#39;gfs_&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s1\">&#39;http://nomads.ncep.noaa.gov:80/dods/gfs_0p25_1hr&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">retries</span><span class=\"o\">=</span><span class=\"mi\">3</span></span>)</span>"}, {"fullname": "bandsos.webdata.GFS_0p25_1hr.last", "modulename": "bandsos.webdata", "qualname": "GFS_0p25_1hr.last", "type": "variable", "doc": "<p>Gives the last cycle name.</p>\n"}, {"fullname": "bandsos.webdata.GFS_0p25_1hr.check", "modulename": "bandsos.webdata", "qualname": "GFS_0p25_1hr.check", "type": "function", "doc": "<p>Check online for new cycles, and returns true if new cycle is available, false otherwise.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">min_file_size</span><span class=\"o\">=</span><span class=\"mi\">1000000</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "bandsos.webdata.GFS_0p25_1hr.download", "modulename": "bandsos.webdata", "qualname": "GFS_0p25_1hr.download", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">extent</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">360</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">90</span><span class=\"p\">,</span> <span class=\"mi\">90</span><span class=\"p\">]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "bandsos.webdata.GFS_0p25_1hr.get_data_handle", "modulename": "bandsos.webdata", "qualname": "GFS_0p25_1hr.get_data_handle", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">dataurl</span>, </span><span class=\"param\"><span class=\"n\">retries</span><span class=\"o\">=</span><span class=\"mi\">3</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "bandsos.webdata.GFS_0p25_1hr.save_data", "modulename": "bandsos.webdata", "qualname": "GFS_0p25_1hr.save_data", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">ds</span>, </span><span class=\"param\"><span class=\"n\">fname</span>, </span><span class=\"param\"><span class=\"n\">extent</span>, </span><span class=\"param\"><span class=\"n\">retries</span><span class=\"o\">=</span><span class=\"mi\">3</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "bandsos.webdir", "modulename": "bandsos.webdir", "type": "module", "doc": "<p>Ref:</p>\n\n<ul>\n<li>Github REST API: <a href=\"https://docs.github.com/en/rest\">https://docs.github.com/en/rest</a></li>\n<li>GHAPI: <a href=\"https://ghapi.fast.ai/fullapi.html\">https://ghapi.fast.ai/fullapi.html</a></li>\n<li>pygit2: <a href=\"https://www.pygit2.org/index.html\">https://www.pygit2.org/index.html</a></li>\n</ul>\n"}, {"fullname": "bandsos.webdir.GithubDirectory", "modulename": "bandsos.webdir", "qualname": "GithubDirectory", "type": "class", "doc": "<p></p>\n"}, {"fullname": "bandsos.webdir.GithubDirectory.__init__", "modulename": "bandsos.webdir", "qualname": "GithubDirectory.__init__", "type": "function", "doc": "<p>fdir: rootdir/dirname</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">fdir</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bytes</span><span class=\"p\">,</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">PathLike</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">username</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">access_token</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">license</span><span class=\"o\">=</span><span class=\"s1\">&#39;mit&#39;</span></span>)</span>"}, {"fullname": "bandsos.webdir.GithubDirectory.add", "modulename": "bandsos.webdir", "qualname": "GithubDirectory.add", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">fpaths</span><span class=\"p\">:</span> <span class=\"nb\">list</span>, </span><span class=\"param\"><span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}];

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();